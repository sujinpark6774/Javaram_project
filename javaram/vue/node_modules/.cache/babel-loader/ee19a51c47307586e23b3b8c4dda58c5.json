{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CalendarComp = _resolveComponent(\"CalendarComp\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_CalendarComp, {\n    \"is-expanded\": \"\",\n    attributes: $data.attributes,\n    \"from-date\": new Date(2022, 2, 1),\n    onDayclick: $options.onDayClick\n  }, null, 8\n  /* PROPS */\n  , [\"attributes\", \"from-date\", \"onDayclick\"]), _createCommentVNode(\" <h6>todoCalendar Component: {{ day.id }}</h6> \")]);\n}","map":{"version":3,"mappings":";;;;uBACIA,oBAOM,KAPN,EAOM,IAPN,EAOM,CANFC,aAI2BC,uBAJ3B,EAI2B;AAHzB,qBAGyB;AAFxBC,cAAU,EAAEC,gBAEY;AADxB,iBAAS,IAAMC,IAAN,CAAU,IAAV,EAAU,CAAV,EAAU,CAAV,CACe;AAAxBC,cAAQ,EAAEC;AAAc,GAJ3B;;AAAA,8CAME,EADFC,sEACE,CAPN","names":["_createElementBlock","_createVNode","_component_CalendarComp","attributes","$data","Date","onDayclick","$options","_createCommentVNode"],"sourceRoot":"","sources":["C:\\eclipse_portable\\WORKSPACE\\javaram\\vue\\src\\components\\todo\\component\\TodoCalendar.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <CalendarComp \r\n          is-expanded \r\n          :attributes=\"attributes\" \r\n          :from-date=\"new Date(2022, 2, 1)\"\r\n          @dayclick=\"onDayClick\" />\r\n        <!-- <h6>todoCalendar Component: {{ day.id }}</h6> -->\r\n    </div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      days: [],\r\n      day: Array,\r\n      total_todos: [],\r\n\r\n      attributes: [\r\n        {\r\n          dot: true,\r\n          dates: [\r\n            new Date(2022,2,1),\r\n            new Date(2022,2,10),\r\n            new Date(2022,2,25),\r\n            // new Date(2022-03-06),\r\n          ]\r\n        }\r\n      ],\r\n\r\n\r\n\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    dates() {\r\n      return this.days.map(day => day.date);\r\n    },\r\n\r\n    // attributes() {\r\n    //   return this.dates.map(date => ({\r\n    //     highlight: true,\r\n    //     dates: date,\r\n    //   }));\r\n    // },\r\n  },\r\n\r\n  methods: {\r\n    // Calendar에서 선택한 날짜 받음\r\n    onDayClick(day) {\r\n      const idx = this.days.findIndex(d => d.id === day.id);\r\n      if (idx >= 0) {\r\n        this.days.splice(idx, 1);\r\n      } else {\r\n        this.days = [],\r\n        this.days.push({\r\n          id: day.id,\r\n          date: day.date,\r\n        });\r\n        console.log(this.days);\r\n        this.day=this.days[0];\r\n      }\r\n\r\n      // Calendar에서 선택한 날짜를 TodoPage로 보내기 \r\n      this.$emit(\"clickdateC\",this.day);\r\n    },\r\n    \r\n    // Todo 데이터(user 기준) 가져오기\r\n    TodoListU() {\r\n\r\n        axios\r\n            .get(\"/todo/?user=\" + this.user)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                this.total_todos = response.data;\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            })\r\n    }\r\n  },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module"}