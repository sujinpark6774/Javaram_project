{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-184aa99c\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"wrap\"\n};\nconst _hoisted_2 = {\n  class: \"container p-5\"\n};\nconst _hoisted_3 = {\n  class: \"accordion\",\n  id: \"accordionExample\"\n};\nconst _hoisted_4 = [\"id\"];\nconst _hoisted_5 = [\"data-bs-target\", \"aria-controls\"];\nconst _hoisted_6 = [\"id\", \"aria-labelledby\"];\n\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"accordion-body\"\n}, [/*#__PURE__*/_createElementVNode(\"strong\", null, \"This is the first item's accordion body.\"), /*#__PURE__*/_createTextVNode(\" It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \"), /*#__PURE__*/_createElementVNode(\"code\", null, \".accordion-body\"), /*#__PURE__*/_createTextVNode(\", though the transition does limit overflow. \")], -1\n/* HOISTED */\n));\n\nconst _hoisted_8 = [_hoisted_7];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TodoCalendar = _resolveComponent(\"TodoCalendar\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Calendar \"), _createElementVNode(\"div\", null, [_createVNode(_component_TodoCalendar, {\n    onClickdateC: $options.clickdateC\n  }, null, 8\n  /* PROPS */\n  , [\"onClickdateC\"]), _createElementVNode(\"h6\", null, \"todopagedateTest: \" + _toDisplayString(this.date), 1\n  /* TEXT */\n  )]), _createCommentVNode(\" <div class=\\\"todo-sections\\\"> \"), _createCommentVNode(\" Todo list \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.todos, (todo, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"accordion-item\",\n      key: todo.todo_no\n    }, [_createElementVNode(\"h2\", {\n      class: \"accordion-header\",\n      id: 'heading' + todo.todo_no\n    }, [_createElementVNode(\"button\", {\n      class: _normalizeClass([\"accordion-button\", {\n        'collapsed': index !== 0\n      }]),\n      type: \"button\",\n      \"data-bs-toggle\": \"collapse\",\n      \"data-bs-target\": '#collapse' + todo.todo_no,\n      \"aria-expanded\": \"true\",\n      \"aria-controls\": 'collapse' + todo.todo_no\n    }, \" Accordion Item \" + _toDisplayString(todo.todo_title), 11\n    /* TEXT, CLASS, PROPS */\n    , _hoisted_5)], 8\n    /* PROPS */\n    , _hoisted_4), _createElementVNode(\"div\", {\n      id: 'collapse' + todo.todo_no,\n      class: _normalizeClass([\"accordion-collapse collapse\", {\n        'show': index === 0\n      }]),\n      \"aria-labelledby\": 'heading' + todo.todo_no,\n      \"data-bs-parent\": \"#accordionExample\"\n    }, _hoisted_8, 10\n    /* CLASS, PROPS */\n    , _hoisted_6)]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]), _createCommentVNode(\" <div class=\\\"todo-left\\\">\\r\\n\\r\\n        <div class=\\\"todo-list-tab\\\">\\r\\n          <h4>To-do</h4>\\r\\n          <button type=\\\"button\\\" class=\\\"addBtn btn btn-primary btn-sm\\\" data-bs-toggle=\\\"modal\\\"\\r\\n            data-bs-target=\\\"#staticBackdrop\\\">Add</button>\\r\\n        </div>\\r\\n\\r\\n        <div v-for=\\\"(todo,idx) in todos\\\" :key=\\\"idx\\\">\\r\\n          <input type=\\\"checkbox\\\" v-model=\\\"todo.check_yn\\\" @click=\\\"TodoDetail()\\\">\\r\\n          {{ todo.title }}\\r\\n        </div>\\r\\n\\r\\n      </div> \"), _createCommentVNode(\" <hr> \"), _createCommentVNode(\" Todo Detail(구현 필요) \"), _createCommentVNode(\" <div class=\\\"todo-right\\\">\\r\\n        <h4>Detail</h4>\\r\\n        <TodoDetail :clickdateD=\\\"this.date\\\" />\\r\\n      </div>\\r\\n\\r\\n    </div> \"), _createCommentVNode(\" Modal \")]);\n}","map":{"version":3,"mappings":";;;;;AAEOA,OAAK,EAAC;;;AAeJA,OAAK,EAAC;;;AACFA,OAAK,EAAC;AAAYC,IAAE,EAAC;;;;;;gEAWdC,oBAMM,KANN,EAMM;AANDF,OAAK,EAAC;AAML,CANN,EAA2B,cACvBE,oBAAyD,QAAzD,EAAyD,IAAzD,EAAQ,0CAAR,CADuB,gCACkC,6WADlC,eAKAA,oBAA4B,MAA5B,EAA4B,IAA5B,EAAM,iBAAN,CALA,gCAK4B,gDAL5B,CAA3B;;AAAA;;oBAAAC;;;;uBA3BlBC,oBA4EM,KA5EN,cA4EM,CA1EJC,iCA0EI,EAzEJH,oBAGM,KAHN,EAGM,IAHN,EAGM,CAFJI,aAAyCC,uBAAzC,EAAyC;AAA1BC,gBAAU,EAAEC;AAAc,GAAzC,EAAqC,IAArC,EAAqC;AAAA;AAArC,IAAqC,gBAArC,CAEI,EADJP,oBAA0C,IAA1C,EAA0C,IAA1C,EAAI,uBAAkBQ,sBAAQC,IAAR,CAAtB,EAAkC;AAAA;AAAlC,GACI,CAHN,CAyEI,EAjEJN,sDAiEI,EA/DFA,kCA+DE,EA7DJH,oBAyBM,KAzBN,cAyBM,CAxBFA,oBAsBM,KAtBN,cAsBM,oBArBFE,oBAkBMQ,SAlBN,EAkBM,IAlBN,EAkBMC,YAlB8CC,WAkB9C,EAlBmD,CAArBC,IAAqB,EAAfC,KAAe,KAAV;yBAA/CZ,oBAkBM,KAlBN,EAkBM;AAlBDJ,WAAK,EAAC,gBAkBL;AAlBsDiB,SAAG,EAAEF,IAAI,CAACG;AAkBhE,KAlBN,GACIhB,oBAMK,IANL,EAMK;AANDF,WAAK,EAAC,kBAML;AANyBC,QAAE,cAAYc,IAAI,CAACG;AAM5C,KANL,GACIhB,oBAIS,QAJT,EAIS;AAJDF,WAAK,mBAAC,kBAAD,EAAmB;AAAA,qBAAwBgB,KAAK;AAA7B,OAAnB,EAIJ;AAJ8DG,UAAI,EAAC,QAInE;AAHL,wBAAe,UAGV;AAHsB,wBAAc,cAAcJ,IAAI,CAACG,OAGvD;AAHgE,uBAAc,MAG9E;AAFJ,uBAAa,aAAaH,IAAI,CAACG;AAE3B,KAJT,EAE6C,qBAC1BR,iBAAEK,IAAI,CAACK,UAAP,CAHnB,EAGoC;AAAA;AAHpC,MAGoCC,UAHpC,EADJ;;AAAA,mBAOAnB,oBASM,KATN,EASM;AATAD,QAAE,eAAac,IAAI,CAACG,OASpB;AAT6BlB,WAAK,mBAAC,6BAAD,EAA8B;AAAA,gBAAmBgB,KAAK;AAAxB,OAA9B,EASlC;AARD,yBAAe,YAAYD,IAAI,CAACG,OAQ/B;AARwC,wBAAe;AAQvD,KATN;;AAAA,kBARJ;GAkBM,CAlBN;;AAAA,GAqBE,EAtBN,CAwBE,CAzBN,CA6DI,EA3BFb,+gBA2BE,EAZFA,6BAYE,EAVAA,2CAUA,EATFA,oKASE,EAFJA,8BAEI,CA5EN","names":["class","id","_createElementVNode","_hoisted_7","_createElementBlock","_createCommentVNode","_createVNode","_component_TodoCalendar","onClickdateC","$options","_toDisplayString","date","_Fragment","_renderList","$data","todo","index","key","todo_no","type","todo_title","_hoisted_5"],"sourceRoot":"","sources":["C:\\eclipse_portable\\WORKSPACE\\javaram\\vue\\src\\components\\todo\\page\\TodoPage.vue"],"sourcesContent":["<template>\r\n\r\n  <div class=\"wrap\">\r\n\r\n    <!-- Calendar -->\r\n    <div>\r\n      <TodoCalendar @clickdateC=\"clickdateC\" />\r\n      <h6>todopagedateTest: {{ this.date }}</h6>\r\n    </div>\r\n\r\n\r\n\r\n\r\n    <!-- <div class=\"todo-sections\"> -->\r\n\r\n      <!-- Todo list -->\r\n\r\n    <div class=\"container p-5\">\r\n        <div class=\"accordion\" id=\"accordionExample\">\r\n            <div class=\"accordion-item\" v-for=\"(todo, index) in todos\" :key=\"todo.todo_no\">\r\n                <h2 class=\"accordion-header\" :id=\"'heading'+todo.todo_no\">\r\n                    <button class=\"accordion-button\" :class=\"{ 'collapsed': index !== 0 }\" type=\"button\"\r\n                        data-bs-toggle=\"collapse\" :data-bs-target=\"'#collapse'+todo.todo_no\" aria-expanded=\"true\"\r\n                        :aria-controls=\"'collapse'+todo.todo_no\">\r\n                        Accordion Item {{todo.todo_title}}\r\n                    </button>\r\n                </h2>\r\n                <div :id=\"'collapse'+todo.todo_no\" class=\"accordion-collapse collapse\" :class=\"{ 'show': index === 0 }\"\r\n                    :aria-labelledby=\"'heading'+todo.todo_no\" data-bs-parent=\"#accordionExample\">\r\n                    <div class=\"accordion-body\">\r\n                        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse\r\n                        plugin adds the appropriate classes that we use to style each element. These classes control the\r\n                        overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of\r\n                        this with custom CSS or overriding our default variables. It's also worth noting that just about any\r\n                        HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <!-- <div class=\"todo-left\">\r\n\r\n        <div class=\"todo-list-tab\">\r\n          <h4>To-do</h4>\r\n          <button type=\"button\" class=\"addBtn btn btn-primary btn-sm\" data-bs-toggle=\"modal\"\r\n            data-bs-target=\"#staticBackdrop\">Add</button>\r\n        </div>\r\n\r\n        <div v-for=\"(todo,idx) in todos\" :key=\"idx\">\r\n          <input type=\"checkbox\" v-model=\"todo.check_yn\" @click=\"TodoDetail()\">\r\n          {{ todo.title }}\r\n        </div>\r\n\r\n      </div> -->\r\n      \r\n      <!-- <hr> -->\r\n\r\n        <!-- Todo Detail(구현 필요) -->\r\n      <!-- <div class=\"todo-right\">\r\n        <h4>Detail</h4>\r\n        <TodoDetail :clickdateD=\"this.date\" />\r\n      </div>\r\n\r\n    </div> -->\r\n\r\n    <!-- Modal -->\r\n\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport TodoCalendar from \"../component/TodoCalendar.vue\";\r\n// import TodoList from \"../component/TodoList.vue\";\r\n// import TodoDetail from \"../component/TodoDetail.vue\";\r\n\r\nexport default {\r\n  name: \"TodoPage\",\r\n\r\n  components: {\r\n    TodoCalendar,\r\n    // TodoList,\r\n    // TodoDetail,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      attrs: [{\r\n        key: 'today',\r\n        highlight: 'blue',\r\n        dates: new Date(),\r\n      },],\r\n      date: \"\",\r\n      user: \"sujin\",\r\n      todos: [],\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    \r\n    clickdateC(date) {\r\n      // Calendar에서 선택한 날짜 받음\r\n      this.date=date.id;\r\n      // (user, 날짜 기준) todo 데이터 가져옴\r\n      axios\r\n        .get(`/todo/detail?user=${this.user}&tododate=${date.id}`)\r\n        .then(response => {\r\n          console.log(response.data);\r\n          this.todos = response.data;\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });    \r\n    },\r\n\r\n    TodoDetail() {\r\n      // d\r\n    },\r\n\r\n  },\r\n}\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n<style scoped>\r\n  .wrap {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .vc-container {\r\n    width: 50%;\r\n  }\r\n\r\n  .todo-sections {\r\n    flex: 1;\r\n    margin-top: 20px;\r\n    margin-bottom: 50px;\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n\r\n  .todo-tab {\r\n    position: relative;\r\n  }\r\n\r\n  .addBtn {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n  }\r\n\r\n  .todo-left {\r\n    flex: 1;\r\n  }\r\n\r\n  .todo-right {\r\n    flex: 1;\r\n    margin-left: 20px;\r\n  }\r\n\r\n  .list-group {\r\n    height: 200px;\r\n    overflow-y: scroll;\r\n  }\r\n\r\n  .todo_detail {\r\n    height: 200px;\r\n    overflow-y: scroll;\r\n  }\r\n\r\n  /* modal 관련 style*/\r\n\r\n  label {\r\n    margin-top: 20px;\r\n  }\r\n\r\n  .modal-body {\r\n    margin : 0;\r\n  }\r\n</style>"]},"metadata":{},"sourceType":"module"}