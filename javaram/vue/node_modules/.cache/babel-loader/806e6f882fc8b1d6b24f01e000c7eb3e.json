{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: 'paginated-list',\n\n  data() {\n    return {\n      pageNum: 0,\n      cnt: 0,\n      pageSize: 8,\n      listArray: []\n    };\n  },\n\n  methods: {\n    nextPage() {\n      this.pageNum += 1;\n    },\n\n    prevPage() {\n      this.pageNum -= 1;\n    },\n\n    NoticeList() {\n      axios.get(\"/notice\").then(response => {\n        console.log(response.data);\n        this.listArray = response.data;\n        this.cnt = response.data.length;\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n\n    NoticeClick(noticedata) {\n      this.$router.push({\n        path: `/noticedetailpage/${noticedata}`\n      });\n    }\n\n  },\n  computed: {\n    pageCount() {\n      let listLeng = this.listArray.length,\n          listSize = this.pageSize,\n          page = Math.floor(listLeng / listSize);\n      if (listLeng % listSize > 0) page += 1;\n      /*\r\n      아니면 page = Math.floor((listLeng - 1) / listSize) + 1;\r\n      이런식으로 if 문 없이 고칠 수도 있다!\r\n      */\n\n      return page;\n    },\n\n    paginatedData() {\n      const start = this.pageNum * this.pageSize,\n            end = start + this.pageSize;\n      return this.listArray.slice(start, end);\n    }\n\n  },\n\n  mounted() {\n    this.NoticeList();\n  }\n\n};","map":{"version":3,"mappings":"AAmCA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACbC,MAAI,EAAE,gBADO;;AAEbC,MAAI,GAAG;AACL,WAAO;AACLC,aAAO,EAAE,CADJ;AAELC,SAAG,EAAE,CAFA;AAGLC,cAAQ,EAAE,CAHL;AAILC,eAAS,EAAE;AAJN,KAAP;AAMD,GATY;;AAWbC,SAAO,EAAE;AACPC,YAAQ,GAAG;AACT,WAAKL,OAAL,IAAgB,CAAhB;AACD,KAHM;;AAIPM,YAAQ,GAAG;AACT,WAAKN,OAAL,IAAgB,CAAhB;AACD,KANM;;AAOPO,cAAU,GAAG;AACXV,WAAI,CACDW,GADH,CACO,SADP,EAEGC,IAFH,CAEQC,QAAO,IAAK;AAChBC,eAAO,CAACC,GAAR,CAAYF,QAAQ,CAACX,IAArB;AACA,aAAKI,SAAL,GAAiBO,QAAQ,CAACX,IAA1B;AACA,aAAKE,GAAL,GAAWS,QAAQ,CAACX,IAAT,CAAcc,MAAzB;AACD,OANH,EAOGC,KAPH,CAOSC,KAAK;AACVJ,eAAO,CAACC,GAAR,CAAYG,CAAZ;AACD,OATH;AAUD,KAlBM;;AAmBPC,eAAW,CAACC,UAAD,EAAa;AACtB,WAAKC,OAAL,CAAaC,IAAb,CAAkB;AAChBC,YAAI,EAAG,qBAAoBH,UAAW;AADtB,OAAlB;AAGD;;AAvBM,GAXI;AAqCbI,UAAQ,EAAE;AACRC,aAAS,GAAG;AACV,UAAIC,QAAO,GAAI,KAAKpB,SAAL,CAAeU,MAA9B;AAAA,UACEW,QAAO,GAAI,KAAKtB,QADlB;AAAA,UAEEuB,IAAG,GAAIC,IAAI,CAACC,KAAL,CAAWJ,QAAO,GAAIC,QAAtB,CAFT;AAGA,UAAID,QAAO,GAAIC,QAAX,GAAsB,CAA1B,EAA6BC,IAAG,IAAK,CAAR;AAE7B;;;;;AAIA,aAAOA,IAAP;AACD,KAZO;;AAaRG,iBAAa,GAAG;AACd,YAAMC,KAAI,GAAI,KAAK7B,OAAL,GAAe,KAAKE,QAAlC;AAAA,YACE4B,GAAE,GAAID,KAAI,GAAI,KAAK3B,QADrB;AAEA,aAAO,KAAKC,SAAL,CAAe4B,KAAf,CAAqBF,KAArB,EAA4BC,GAA5B,CAAP;AACD;;AAjBO,GArCG;;AAyDbE,SAAO,GAAG;AACR,SAAKzB,UAAL;AACD;;AA3DY,CAAf","names":["axios","name","data","pageNum","cnt","pageSize","listArray","methods","nextPage","prevPage","NoticeList","get","then","response","console","log","length","catch","e","NoticeClick","noticedata","$router","push","path","computed","pageCount","listLeng","listSize","page","Math","floor","paginatedData","start","end","slice","mounted"],"sourceRoot":"","sources":["C:\\eclipse_portable\\WORKSPACE\\javaram\\vue\\src\\components\\notice\\component\\NoticeList.vue"],"sourcesContent":["<template>\r\n\r\n  <div id=\"notice-list-wrap\">\r\n    \r\n    <div id=\"notice_tab\">\r\n        <h3 id=\"notice_title\">Notice</h3>\r\n    </div>\r\n\r\n    <div id=\"notice-list-table\">\r\n      <table>\r\n\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">No.</th>\r\n            <th scope=\"col\">Title</th>\r\n            <th scope=\"col\">Writer</th>\r\n            <th scope=\"col\">Date</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          <tr v-for=\"(notice,idx) in paginatedData\" :key=\"idx\" @click=\"NoticeClick(notice.notice_id)\">\r\n            <th scope=\"row\">{{this.cnt-idx-(pageNum)*pageSize}}</th>\r\n            <td>{{notice.notice_title}}</td>\r\n            <td>{{notice.user_id}}</td>\r\n            <td>{{notice.notice_date}}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\"\r\n\r\nexport default {\r\n  name: 'paginated-list',\r\n  data() {\r\n    return {\r\n      pageNum: 0,\r\n      cnt: 0,\r\n      pageSize: 8,\r\n      listArray: [],\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    nextPage() {\r\n      this.pageNum += 1;\r\n    },\r\n    prevPage() {\r\n      this.pageNum -= 1;\r\n    },\r\n    NoticeList() {\r\n      axios\r\n        .get(\"/notice\")\r\n        .then(response => {\r\n          console.log(response.data);\r\n          this.listArray = response.data;\r\n          this.cnt = response.data.length;\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        })\r\n    },\r\n    NoticeClick(noticedata) {\r\n      this.$router.push({\r\n        path: `/noticedetailpage/${noticedata}`\r\n      });\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    pageCount() {\r\n      let listLeng = this.listArray.length,\r\n        listSize = this.pageSize,\r\n        page = Math.floor(listLeng / listSize);\r\n      if (listLeng % listSize > 0) page += 1;\r\n\r\n      /*\r\n      아니면 page = Math.floor((listLeng - 1) / listSize) + 1;\r\n      이런식으로 if 문 없이 고칠 수도 있다!\r\n      */\r\n      return page;\r\n    },\r\n    paginatedData() {\r\n      const start = this.pageNum * this.pageSize,\r\n        end = start + this.pageSize;\r\n      return this.listArray.slice(start, end);\r\n    },\r\n\r\n  },\r\n  mounted() {\r\n    this.NoticeList();\r\n  },\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n  h3 {\r\n    text-align: left;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n\r\n  table th {\r\n    font-size: 0.9rem;\r\n  }\r\n\r\n  table tr {\r\n    height: 2rem;\r\n    text-align: center;\r\n    border-bottom: 1px solid #505050;\r\n  }\r\n\r\n  table tr:first-of-type {\r\n    border-top: 2px solid #404040;\r\n  }\r\n\r\n  table tr td {\r\n    padding: 1rem 0;\r\n    font-size: 0.9rem;\r\n  }\r\n\r\n  #notice_tab {\r\n      display: flex;\r\n      flex-direction: row;\r\n      flex:1;\r\n      border-left-style: solid;\r\n      border-left-width: 5px;\r\n      border-left-color: #00C9BE;\r\n  }\r\n\r\n  #notice_title {\r\n      margin-left: 15px;\r\n      align-self: center;\r\n      flex: 6;\r\n  }\r\n\r\n  #notice-list-table {\r\n    margin-top: 20px;\r\n  }\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}