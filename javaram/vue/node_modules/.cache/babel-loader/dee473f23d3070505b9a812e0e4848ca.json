{"ast":null,"code":"import { Form, Field, ErrorMessage } from \"vee-validate\";\nimport * as yup from \"yup\";\nimport axios from 'axios';\nexport default {\n  name: \"RegisterPage\",\n  components: {\n    Form,\n    Field,\n    ErrorMessage\n  },\n\n  data() {\n    const schema = yup.object().shape({\n      username: yup.string().required(\"Username is required!\").min(3, \"Must be at least 3 characters!\").max(20, \"Must be maximum 20 characters!\"),\n      id: yup.string().matches(/[a-zA-Z0-9]/g, \"You only insert alphabet or number!\").required(\"Id is required!\").min(6, \"Must be at least 6 characters!\").max(40, \"Must be maximum 40 characters!\"),\n      email: yup.string().required(\"Email is required!\").email(\"Email is invalid!\").max(50, \"Must be maximum 50 characters!\"),\n      password: yup.string().required(\"Password is required!\").min(6, \"Must be at least 6 characters!\").max(40, \"Must be maximum 40 characters!\")\n    });\n    return {\n      successful: false,\n      loading: false,\n      message: \"\",\n      schema\n    };\n  },\n\n  computed: {},\n\n  mounted() {},\n\n  methods: {\n    handleRegister(user) {\n      this.message = \"\";\n      this.successful = false;\n      this.loading = true;\n      this.$store.dispatch(\"auth/register\", user).then(data => {\n        this.message = data.message;\n        this.successful = true;\n        this.loading = false;\n      }, error => {\n        this.message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        this.successful = false;\n        this.loading = false;\n      });\n    },\n\n    submit() {\n      axios.post('/insertUser', {\n        user_id: this.user_id,\n        user_name: this.user_name,\n        user_pw: this.user_pw,\n        user_email: this.user_email\n      }).then(response => {\n        if (response.status) {\n          alert(\"회원가입에 성공하셨습니다.\");\n          this.$router.push('/login');\n        } else {\n          alert(\"회원가입에 실패하셨습니다. 다시 시도해주십시오.\");\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAoDA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,YAAtB,QAA0C,cAA1C;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,eAAe;AACbC,MAAI,EAAE,cADO;AAEbC,YAAU,EAAE;AACVN,QADU;AAEVC,SAFU;AAGVC;AAHU,GAFC;;AAObK,MAAI,GAAG;AACL,UAAMC,MAAK,GAAIL,GAAG,CAACM,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,cAAQ,EAAER,GAAE,CACTS,MADO,GAEPC,QAFO,CAEE,uBAFF,EAGPC,GAHO,CAGH,CAHG,EAGA,gCAHA,EAIPC,GAJO,CAIH,EAJG,EAIC,gCAJD,CADsB;AAMhCC,QAAE,EAAEb,GAAE,CACHS,MADC,GAEDK,OAFC,CAEQ,cAFR,EAEyB,qCAFzB,EAGDJ,QAHC,CAGQ,iBAHR,EAIDC,GAJC,CAIG,CAJH,EAIM,gCAJN,EAKDC,GALC,CAKG,EALH,EAKO,gCALP,CAN4B;AAYhCG,WAAK,EAAEf,GAAE,CACNS,MADI,GAEJC,QAFI,CAEK,oBAFL,EAGJK,KAHI,CAGE,mBAHF,EAIJH,GAJI,CAIA,EAJA,EAII,gCAJJ,CAZyB;AAiBhCI,cAAQ,EAAEhB,GAAE,CACTS,MADO,GAEPC,QAFO,CAEE,uBAFF,EAGPC,GAHO,CAGH,CAHG,EAGA,gCAHA,EAIPC,GAJO,CAIH,EAJG,EAIC,gCAJD;AAjBsB,KAAnB,CAAf;AAuBA,WAAO;AACLK,gBAAU,EAAE,KADP;AAELC,aAAO,EAAE,KAFJ;AAGLC,aAAO,EAAE,EAHJ;AAILd;AAJK,KAAP;AAMD,GArCY;;AAsCbe,UAAQ,EAAE,EAtCG;;AAwCbC,SAAO,GAAG,CACT,CAzCY;;AA0CbC,SAAO,EAAE;AACPC,kBAAc,CAACC,IAAD,EAAO;AACnB,WAAKL,OAAL,GAAe,EAAf;AACA,WAAKF,UAAL,GAAkB,KAAlB;AACA,WAAKC,OAAL,GAAe,IAAf;AACA,WAAKO,MAAL,CAAYC,QAAZ,CAAqB,eAArB,EAAsCF,IAAtC,EAA4CG,IAA5C,CACGvB,IAAD,IAAU;AACR,aAAKe,OAAL,GAAef,IAAI,CAACe,OAApB;AACA,aAAKF,UAAL,GAAkB,IAAlB;AACA,aAAKC,OAAL,GAAe,KAAf;AACD,OALH,EAMGU,KAAD,IAAW;AACT,aAAKT,OAAL,GACGS,KAAK,CAACC,QAAN,IACCD,KAAK,CAACC,QAAN,CAAezB,IADhB,IAECwB,KAAK,CAACC,QAAN,CAAezB,IAAf,CAAoBe,OAFtB,IAGAS,KAAK,CAACT,OAHN,IAIAS,KAAK,CAACE,QAAN,EALF;AAMA,aAAKb,UAAL,GAAkB,KAAlB;AACA,aAAKC,OAAL,GAAe,KAAf;AACF,OAfF;AAiBD,KAtBM;;AAwBPa,UAAM,GAAE;AACN9B,WAAK,CAAC+B,IAAN,CAAW,aAAX,EAA0B;AACtBC,eAAM,EAAI,KAAKA,OADO;AAEtBC,iBAAQ,EAAI,KAAKA,SAFK;AAGtBC,eAAM,EAAI,KAAKA,OAHO;AAItBC,kBAAS,EAAI,KAAKA;AAJI,OAA1B,EAKGT,IALH,CAKQE,QAAO,IAAK;AACjB,YAAGA,QAAQ,CAACQ,MAAZ,EAAmB;AACjBC,eAAK,CAAC,gBAAD,CAAL;AACA,eAAKC,OAAL,CAAaC,IAAb,CAAkB,QAAlB;AACD,SAHD,MAGK;AACHF,eAAK,CAAC,4BAAD,CAAL;AACF;AACF,OAZD,EAYGG,KAZH,CAYSC,GAAE,IAAK;AACbC,eAAO,CAACC,GAAR,CAAYF,GAAZ;AACF,OAdD;AAeF;;AAxCO;AA1CI,CAAf","names":["Form","Field","ErrorMessage","yup","axios","name","components","data","schema","object","shape","username","string","required","min","max","id","matches","email","password","successful","loading","message","computed","mounted","methods","handleRegister","user","$store","dispatch","then","error","response","toString","submit","post","user_id","user_name","user_pw","user_email","status","alert","$router","push","catch","err","console","log"],"sourceRoot":"","sources":["C:\\eclipse_portable\\WORKSPACE\\javaram\\vue\\src\\components\\account\\page\\RegisterPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"col-lg-12\">\r\n    <div class=\"card card-container\">\r\n      <img\r\n        id=\"profile-img\"\r\n        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n        class=\"profile-img-card\"\r\n      />\r\n      <Form @submit=\"handleRegister\" :validation-schema=\"schema\">\r\n        <div v-if=\"!successful\">\r\n          <div class=\"form-group\">\r\n            <label for=\"id\">ID</label>\r\n            <Field name=\"id\" type=\"text\" class=\"form-control\" v-model=\"user_id\" />\r\n            <ErrorMessage name=\"id\" class=\"error-feedback\" />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"username\">Name</label>\r\n            <Field name=\"username\" type=\"username\" class=\"form-control\" v-model=\"user_name\" />\r\n            <ErrorMessage name=\"username\" class=\"error-feedback\" />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"password\">Password</label>\r\n            <Field name=\"password\" type=\"password\" class=\"form-control\" autocomplete=\"off\" v-model=\"user_pw\" />\r\n            <ErrorMessage name=\"password\" class=\"error-feedback\" />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"email\">Email</label>\r\n            <Field name=\"email\" type=\"email\" class=\"form-control\" v-model=\"user_email\" />\r\n            <ErrorMessage name=\"email\" class=\"error-feedback\" />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <router-link to=\"/login\">\r\n              <button type=\"button\" id=\"button_cancel\" class=\"w-47 btn btn-sm\">Cancel</button>\r\n            </router-link>\r\n            <button type=\"button\" @click=\"submit\" id=\"button_signup\" class=\"w-47 btn btn-sm\">SignUp</button>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n\r\n      <div\r\n        v-if=\"message\"\r\n        class=\"alert\"\r\n        :class=\"successful ? 'alert-success' : 'alert-danger'\"\r\n      >\r\n        {{ message }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Form, Field, ErrorMessage } from \"vee-validate\";\r\nimport * as yup from \"yup\";\r\nimport axios from 'axios';\r\nexport default {\r\n  name: \"RegisterPage\",\r\n  components: {\r\n    Form,\r\n    Field,\r\n    ErrorMessage,\r\n  },\r\n  data() {\r\n    const schema = yup.object().shape({\r\n      username: yup\r\n        .string()\r\n        .required(\"Username is required!\")\r\n        .min(3, \"Must be at least 3 characters!\")\r\n        .max(20, \"Must be maximum 20 characters!\"),\r\n      id: yup\r\n        .string()\r\n        .matches( /[a-zA-Z0-9]/g , \"You only insert alphabet or number!\")\r\n        .required(\"Id is required!\")\r\n        .min(6, \"Must be at least 6 characters!\")\r\n        .max(40, \"Must be maximum 40 characters!\"),\r\n      email: yup\r\n        .string()\r\n        .required(\"Email is required!\")\r\n        .email(\"Email is invalid!\")\r\n        .max(50, \"Must be maximum 50 characters!\"),\r\n      password: yup\r\n        .string()\r\n        .required(\"Password is required!\")\r\n        .min(6, \"Must be at least 6 characters!\")\r\n        .max(40, \"Must be maximum 40 characters!\"),\r\n    });\r\n    return {\r\n      successful: false,\r\n      loading: false,\r\n      message: \"\",\r\n      schema,\r\n    };\r\n  },\r\n  computed: {\r\n  },\r\n  mounted() {\r\n  },\r\n  methods: {\r\n    handleRegister(user) {\r\n      this.message = \"\";\r\n      this.successful = false;\r\n      this.loading = true;\r\n      this.$store.dispatch(\"auth/register\", user).then(\r\n        (data) => {\r\n          this.message = data.message;\r\n          this.successful = true;\r\n          this.loading = false;\r\n        },\r\n        (error) => {\r\n          this.message =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n          this.successful = false;\r\n          this.loading = false;\r\n        }\r\n      );\r\n    },\r\n\r\n    submit(){\r\n      axios.post('/insertUser', {\r\n          user_id : this.user_id,\r\n          user_name : this.user_name,\r\n          user_pw : this.user_pw,\r\n          user_email : this.user_email\r\n      }).then(response => {\r\n         if(response.status){\r\n           alert(\"회원가입에 성공하셨습니다.\")\r\n           this.$router.push('/login')\r\n         }else{\r\n           alert(\"회원가입에 실패하셨습니다. 다시 시도해주십시오.\")\r\n         }\r\n      }).catch(err => {\r\n         console.log(err)\r\n      })\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nlabel {\r\n  display: block;\r\n  margin-top: 10px;\r\n}\r\n.card-container.card {\r\n    max-width: 350px !important;\r\n    padding: 40px 40px;\r\n}\r\n\r\n\r\n \r\n.card {\r\n  background-color: #f7f7f7;\r\n  padding: 20px 25px 30px;\r\n  margin: 0 auto 25px;\r\n  /* 세로 위치 조정 */\r\n  margin-top: 8%; \r\n  /* 세로 위치 조정 */\r\n  -moz-border-radius: 2px;\r\n  -webkit-border-radius: 2px;\r\n  border-radius: 2px;\r\n  -moz-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\r\n  -webkit-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\r\n  box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\r\n  min-width: min-content;\r\n  align-items: center;\r\n  padding: 20px;\r\n  position: absolute;\r\n  /* 가로 위치 조정 */\r\n  left: 35%\r\n  /* 가로 위치 조정 */\r\n}\r\n.profile-img-card {\r\n  width: 96px;\r\n  height: 96px;\r\n  margin: 0 auto 10px;\r\n  display: block;\r\n  -moz-border-radius: 50%;\r\n  -webkit-border-radius: 50%;\r\n  border-radius: 50%;\r\n}\r\n.error-feedback {\r\n  color: red;\r\n}\r\n#button_signup {\r\n  display: inline-block;\r\n  flex: 1;\r\n  margin-right: 6px;\r\n  width: 108px;\r\n  font-size: 11px; \r\n  color: white;\r\n  background: #00C9BE;\r\n}\r\n  #button_cancel {\r\n    display: inline-block;\r\n    flex: 1;\r\n    margin-left:2px;\r\n    margin-right: 6px;\r\n    width: 108px;\r\n    font-size: 11px; \r\n    background: #bbbbbb;\r\n    color: white;\r\n  }\r\n</style>"]},"metadata":{},"sourceType":"module"}