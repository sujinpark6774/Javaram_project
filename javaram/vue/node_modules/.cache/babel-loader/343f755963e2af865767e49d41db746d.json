{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"list-group\"\n};\nconst _hoisted_2 = [\"onUpdate:modelValue\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"ul\", _hoisted_1, [_createElementVNode(\"h6\", null, \"clickdateD: \" + _toDisplayString($props.clickdateD), 1), _createElementVNode(\"h6\", null, \"date: \" + _toDisplayString($data.datedata[0].title), 1), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.todos, (todo, idx) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: idx\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => todo.check = $event\n    }, null, 8, _hoisted_2), [[_vModelCheckbox, todo.check]]), _createTextVNode(\" \" + _toDisplayString(todo.title), 1)]);\n  }), 128))]);\n}","map":{"version":3,"mappings":";;AACQA,OAAK,EAAC;;;;uBAAVC,oBAWK,IAXL,cAWK,CATDC,oBAAqC,IAArC,EAAqC,IAArC,EAAI,iBAAYC,iBAAGC,iBAAH,CAAhB,EAA6B,CAA7B,CASC,EARDF,oBAAsC,IAAtC,EAAsC,IAAtC,EAAI,WAAMC,iBAAGE,eAAQ,CAAR,EAAYC,KAAf,CAAV,EAA8B,CAA9B,CAQC,qBANDL,oBAIMM,SAJN,EAIM,IAJN,EAIMC,YAJoBH,WAIpB,EAJyB,CAAlBI,IAAkB,EAAbC,GAAa,KAAV;yBAArBT,oBAIM,KAJN,EAIM;AAJ4BU,SAAG,EAAED;AAIjC,KAJN,EAA0C,iBAEtCR,oBAA4C,OAA5C,EAA4C;AAArCU,UAAI,EAAC,UAAgC;uCAAZH,IAAI,CAACI,QAAKC;AAAE,KAA5C,2CAAgCL,IAAI,CAACI,QAFC,mBAEM,MACxCV,iBAAGM,IAAI,CAACH,KAAR,GAAa,EAHqB,CAA1C;GAIM,CAJN,MAMC,EAXL","names":["class","_createElementBlock","_createElementVNode","_toDisplayString","$props","$data","title","_Fragment","_renderList","todo","idx","key","type","check","$event"],"sourceRoot":"","sources":["C:\\eclipse_portable\\WORKSPACE\\javaram\\vue\\src\\components\\todo\\component\\TodoList.vue"],"sourcesContent":["<template>\r\n    <ul class=\"list-group\">\r\n\r\n        <h6>clickdateD: {{ clickdateD }}</h6>\r\n        <h6>date: {{ datedata[0].title }}</h6>\r\n\r\n        <div v-for=\"(todo,idx) in todos\" :key=\"idx\">\r\n            <!-- <input type=\"checkbox\" v-model=\"todo.check\" @click=\"TodoDetail()\"> -->\r\n            <input type=\"checkbox\" v-model=\"todo.check\">\r\n                {{ todo.title }}\r\n        </div>\r\n\r\n    </ul>\r\n\r\n</template>\r\n\r\n\r\n\r\n<script>\r\n// import axios from \"axios\";\r\n// import { computed } from '@vue/runtime-core';\r\n\r\n\r\nexport default {\r\n    name: \"todoList\",\r\n\r\n    props: {\r\n        // Calendar에서 선택한 날짜 받음\r\n        clickdateD: String\r\n    },\r\n  \r\n    data() {\r\n        return {\r\n            todos: [],\r\n            user: \"sujin\",               // 로그인 정보 가져와야함\r\n            // date: \"2022-03-25\"\r\n            datedata: [],\r\n        }\r\n    },\r\n\r\n    watch: {\r\n        immediate: true,\r\n\r\n        clickdateD(clickdateD) {\r\n            fetch(`/todo/detail?user=${this.user}&tododate=${clickdateD}`)\r\n                .then(response => {\r\n                    // this.datedata = response.json();\r\n                    response.json();\r\n                    console.log(response);\r\n                })\r\n                .then(json => this.datedata = json)\r\n                ;\r\n        }\r\n    },\r\n\r\n    // setup(props) {\r\n    //   const date = computed(() => {\r\n    //     return props.clickdateD;\r\n    //   });\r\n    //   return { date }  \r\n    // },\r\n\r\n    methods:{\r\n        \r\n        // Todo 데이터(user, date 기준) 가져오기\r\n        // TodoListUD(){\r\n\r\n        //     axios\r\n        //         .get(\"/todo/detail?user=\" + this.user + \"&tododate=\" + this.datedata)\r\n        //         .then(response => {\r\n        //             console.log(response.data);\r\n        //             this.todos = response.data;\r\n        //         })\r\n        //         .catch(e => {\r\n        //             console.log(e);\r\n        //         })\r\n        // },\r\n\r\n\r\n    },\r\n\r\n    mounted() {\r\n        // this.TodoListUD();\r\n        // this.clickdateD();\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}