{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"list-group\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"input\", {\n  class: \"form-check-input\",\n  type: \"checkbox\",\n  value: \"\"\n}, null, -1);\n\nconst _hoisted_3 = {\n  class: \"form-check-label\",\n  for: \"flexCheckDefault\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"ul\", _hoisted_1, [_createElementVNode(\"li\", {\n    class: \"list-group-item\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.clicked && _ctx.clicked(...args))\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.todos, (todo, idx) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"form-check\",\n      key: idx\n    }, [_hoisted_2, _createElementVNode(\"label\", _hoisted_3, \" todo: \" + _toDisplayString(todo.title), 1)]);\n  }), 128))])]);\n}","map":{"version":3,"mappings":";;AACQA,OAAK,EAAC;;;gCAGEC,oBAAyD,OAAzD,EAAyD;AAAlDD,OAAK,EAAC,kBAA4C;AAAzBE,MAAI,EAAC,UAAoB;AAATC,OAAK,EAAC;AAAG,CAAzD;;;AACOH,OAAK,EAAC;AAAmBI,KAAG,EAAC;;;uBAJhDC,oBAUK,IAVL,cAUK,CATDJ,oBAQK,IARL,EAQK;AARDD,SAAK,EAAC,iBAQL;AARyBM,WAAK,yCAAEC,qCAAF;AAQ9B,GARL,sBACIF,oBAMMG,SANN,EAMM,IANN,EAMMC,YANuCC,WAMvC,EAN4C,CAAlBC,IAAkB,EAAbC,GAAa,KAAV;yBAAxCP,oBAMM,KANN,EAMM;AANDL,WAAK,EAAC,YAML;AAN+Ca,SAAG,EAAED;AAMpD,KANN,GACIE,YACAb,oBAGQ,OAHR,cACqB,YACXc,iBAAGJ,IAAI,CAACK,KAAR,CAFV,EAEuB,CAFvB,EAFJ;GAMM,CANN,QADJ,CASC,CAVL","names":["class","_createElementVNode","type","value","for","_createElementBlock","onClick","_ctx","_Fragment","_renderList","$data","todo","idx","key","_hoisted_2","_toDisplayString","title"],"sourceRoot":"","sources":["C:\\eclipse_portable\\WORKSPACE\\javaram\\vue\\src\\components\\todo\\component\\TodoList.vue"],"sourcesContent":["<template>\r\n    <ul class=\"list-group\">\r\n        <li class=\"list-group-item\"  @click=\"clicked\">\r\n            <div class=\"form-check\" v-for=\"(todo,idx) in todos\" :key=\"idx\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" value=\"\">\r\n                <label class=\"form-check-label\" for=\"flexCheckDefault\">\r\n                    <!-- 자바람개비 회의 -->\r\n                    todo: {{ todo.title }}\r\n                </label>\r\n            </div>\r\n        </li>\r\n    </ul>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default {\r\n    name: \"todoList\",\r\n  \r\n    data() {\r\n        return {\r\n            todos: [],\r\n            user: \"수진\"        \r\n        }\r\n    },\r\n\r\n    methods:{\r\n        // Notice 데이터 가져오기\r\n        TodoList(){\r\n        axios\r\n            .get(\"/notice/detail?user=\"+this.user)\r\n            .then(response => {\r\n            console.log(response.data);\r\n            this.todos = response.data;\r\n            })\r\n            .catch(e => {\r\n            console.log(e);\r\n            })\r\n        },\r\n\r\n\r\n    },\r\n\r\n    mounted() {\r\n        this.TodoList();\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n</script>"]},"metadata":{},"sourceType":"module"}