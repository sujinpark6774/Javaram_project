{"ast":null,"code":"import { createWebHistory, createRouter } from \"vue-router\";\nimport HomePage from \"./components/HomePage.vue\";\nimport RegisterPage from \"./components/account/page/RegisterPage.vue\";\nimport TodoPage from \"./components/todo/page/TodoPage.vue\";\nimport MailPage from \"./components/mail/page/MailPage.vue\";\nimport ConferPage from \"./components/conference/page/ConferPage.vue\";\nimport NoticePage from \"./components/notice/page/NoticePage.vue\";\nimport NoticeDetailPage from \"./components/notice/page/NoticeDetailPage.vue\";\nimport NoticeWritePage from \"./components/notice/page/NoticeWritePage.vue\";\nimport InformationPage from \"./components/account/page/InformationPage.vue\"; // lazy-loaded\n\nconst ProfilePage = () => import(\"./components/refs/ProfilePage.vue\"); // component\n\n\nimport ModalPage from \"./components/common/component/modal/ModalPage.vue\";\nimport LoginComponent from \"./components/account/component/LoginComponent.vue\";\nimport MailSend from \"./components/mail/page/MailSend.vue\";\nimport MailDetailPage from \"./components/mail/page/MailDetailPage.vue\"; // lazy-loaded\n\nconst BoardAdmin = () => import(\"./components/refs/BoardAdmin.vue\");\n\nconst BoardModerator = () => import(\"./components/refs/BoardModerator.vue\");\n\nconst BoardUser = () => import(\"./components/refs/BoardUser.vue\");\n\nconst routes = [{\n  path: \"/\",\n  name: \"HomePage\",\n  component: HomePage\n}, {\n  path: \"/registerpage\",\n  component: RegisterPage\n}, {\n  path: \"/login\",\n  component: LoginComponent\n}, {\n  path: \"/info\",\n  component: InformationPage\n}, {\n  path: \"/modalpage\",\n  component: ModalPage\n}, {\n  path: \"/mailsend\",\n  name: \"MailSend\",\n  component: MailSend\n}, {\n  path: \"/maildetailpage/:id\",\n  name: \"MailDetailPage\",\n  component: MailDetailPage,\n  props: route => ({\n    id: Number(route.params.id)\n  })\n}, {\n  path: \"/todopage\",\n  component: TodoPage\n}, {\n  path: \"/mailpage\",\n  component: MailPage\n}, {\n  path: \"/conferpage\",\n  component: ConferPage\n}, {\n  path: \"/noticepage\",\n  component: NoticePage\n}, {\n  path: \"/noticedetailpage/:id\",\n  name: \"NoticeDetailPage\",\n  component: NoticeDetailPage,\n  props: route => ({\n    id: Number(route.params.id)\n  })\n}, {\n  path: \"/noticewritepage\",\n  component: NoticeWritePage\n}, {\n  path: \"/todocalendar\",\n  component: TodoCalendar\n}, {\n  path: \"/profilepage\",\n  name: \"profilepage\",\n  // lazy-loaded\n  component: ProfilePage\n}, {\n  path: \"/admin\",\n  name: \"adminpage\",\n  // lazy-loaded\n  component: BoardAdmin\n}, {\n  path: \"/mod\",\n  name: \"moderator\",\n  // lazy-loaded\n  component: BoardModerator\n}, {\n  path: \"/user\",\n  name: \"user\",\n  // lazy-loaded\n  component: BoardUser\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n}); //router.beforeEach((to, from, next) => {\n//    const publicPages = ['/loginpage', '/registerpage', '/homepage'];\n//    const authRequired = !publicPages.includes(to.path);\n//    const loggedIn = localStorage.getItem('user');\n// trying to access a restricted page + not logged in\n// redirect to login page\n//    if (authRequired && !loggedIn) {\n//      next('/loginpage');\n//    } else {\n//      next();\n//    }\n//  });\n\nexport default router;","map":{"version":3,"sources":["C:/eclipse_portable/WORKSPACE/javaram/vue/src/router.js"],"names":["createWebHistory","createRouter","HomePage","RegisterPage","TodoPage","MailPage","ConferPage","NoticePage","NoticeDetailPage","NoticeWritePage","InformationPage","ProfilePage","ModalPage","LoginComponent","MailSend","MailDetailPage","BoardAdmin","BoardModerator","BoardUser","routes","path","name","component","props","route","id","Number","params","TodoCalendar","router","history"],"mappings":"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","sourcesContent":["import { createWebHistory, createRouter } from \"vue-router\";\r\nimport HomePage from \"./components/HomePage.vue\";\r\nimport RegisterPage from \"./components/account/page/RegisterPage.vue\";\r\nimport TodoPage from \"./components/todo/page/TodoPage.vue\";\r\nimport MailPage from \"./components/mail/page/MailPage.vue\";\r\nimport ConferPage from \"./components/conference/page/ConferPage.vue\";\r\n\r\nimport NoticePage from \"./components/notice/page/NoticePage.vue\";\r\nimport NoticeDetailPage from \"./components/notice/page/NoticeDetailPage.vue\";\r\nimport NoticeWritePage from \"./components/notice/page/NoticeWritePage.vue\";\r\n\r\nimport InformationPage from \"./components/account/page/InformationPage.vue\";\r\n\r\n\r\n\r\n\r\n// lazy-loaded\r\nconst ProfilePage = () => import(\"./components/refs/ProfilePage.vue\")\r\n\r\n// component\r\nimport ModalPage from \"./components/common/component/modal/ModalPage.vue\";\r\nimport LoginComponent from \"./components/account/component/LoginComponent.vue\";\r\nimport MailSend from \"./components/mail/page/MailSend.vue\";\r\nimport MailDetailPage from \"./components/mail/page/MailDetailPage.vue\";\r\n// lazy-loaded\r\nconst BoardAdmin = () => import(\"./components/refs/BoardAdmin.vue\")\r\nconst BoardModerator = () => import(\"./components/refs/BoardModerator.vue\")\r\nconst BoardUser = () => import(\"./components/refs/BoardUser.vue\")\r\n\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    name: \"HomePage\",\r\n    component: HomePage,\r\n  },\r\n  {\r\n    path: \"/registerpage\",\r\n    component: RegisterPage,\r\n  },\r\n  {\r\n    path: \"/login\",\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path: \"/info\",\r\n    component: InformationPage,\r\n  },\r\n  {\r\n    path: \"/modalpage\",\r\n    component: ModalPage,\r\n  },\r\n  {\r\n    path: \"/mailsend\",\r\n    name: \"MailSend\",\r\n    component: MailSend,\r\n  },\r\n  {\r\n    path: \"/maildetailpage/:id\",\r\n    name: \"MailDetailPage\",\r\n    component: MailDetailPage,\r\n    props: route => ({\r\n      id: Number(route.params.id)\r\n    })\r\n  },\r\n\r\n  {\r\n    path: \"/todopage\",\r\n    component: TodoPage,\r\n  },\r\n  {\r\n    path: \"/mailpage\",\r\n    component: MailPage,\r\n  },\r\n  {\r\n    path: \"/conferpage\",\r\n    component: ConferPage,\r\n  },\r\n\r\n  {\r\n    path: \"/noticepage\",\r\n    component: NoticePage,\r\n  },\r\n  {\r\n    path: \"/noticedetailpage/:id\",\r\n    name: \"NoticeDetailPage\",\r\n    component: NoticeDetailPage,\r\n    props: route => ({\r\n      id: Number(route.params.id)\r\n    })\r\n  },\r\n  {\r\n    path: \"/noticewritepage\",\r\n    component: NoticeWritePage,\r\n  },\r\n\r\n\r\n  \r\n  {\r\n    path: \"/todocalendar\",\r\n    component: TodoCalendar,\r\n  },\r\n\r\n\r\n\r\n\r\n\r\n  {\r\n    path: \"/profilepage\",\r\n    name: \"profilepage\",\r\n    // lazy-loaded\r\n    component: ProfilePage,\r\n  },\r\n  {\r\n    path: \"/admin\",\r\n    name: \"adminpage\",\r\n    // lazy-loaded\r\n    component: BoardAdmin,\r\n  },\r\n  {\r\n    path: \"/mod\",\r\n    name: \"moderator\",\r\n    // lazy-loaded\r\n    component: BoardModerator,\r\n  },\r\n  {\r\n    path: \"/user\",\r\n    name: \"user\",\r\n    // lazy-loaded\r\n    component: BoardUser,\r\n  },\r\n];\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes,\r\n});\r\n\r\n\r\n//router.beforeEach((to, from, next) => {\r\n//    const publicPages = ['/loginpage', '/registerpage', '/homepage'];\r\n//    const authRequired = !publicPages.includes(to.path);\r\n//    const loggedIn = localStorage.getItem('user');\r\n    // trying to access a restricted page + not logged in\r\n    // redirect to login page\r\n//    if (authRequired && !loggedIn) {\r\n//      next('/loginpage');\r\n//    } else {\r\n//      next();\r\n//    }\r\n//  });\r\n  \r\nexport default router;\r\n\r\n"]},"metadata":{},"sourceType":"module"}