{"ast":null,"code":"import { Form, Field, ErrorMessage } from \"vee-validate\";\nimport * as yup from \"yup\";\nexport default {\n  name: \"RegisterPage\",\n  components: {\n    Form,\n    Field,\n    ErrorMessage\n  },\n\n  data() {\n    const schema = yup.object().shape({\n      username: yup.string().required(\"Username is required!\").min(3, \"Must be at least 3 characters!\").max(20, \"Must be maximum 20 characters!\"),\n      id: yup.string().required(\"Id is required!\").min(6, \"Must be at least 6 characters!\").max(40, \"Must be maximum 40 characters!\"),\n      email: yup.string().required(\"Email is required!\").email(\"Email is invalid!\").max(50, \"Must be maximum 50 characters!\"),\n      password: yup.string().required(\"Password is required!\").min(6, \"Must be at least 6 characters!\").max(40, \"Must be maximum 40 characters!\")\n    });\n    return {\n      successful: false,\n      loading: false,\n      message: \"\",\n      schema\n    };\n  },\n\n  computed: {\n    loggedIn() {\n      return this.$store.state.auth.status.loggedIn;\n    }\n\n  },\n\n  mounted() {\n    if (this.loggedIn) {\n      this.$router.push(\"/profile\");\n    }\n  },\n\n  methods: {\n    handleRegister(user) {\n      this.message = \"\";\n      this.successful = false;\n      this.loading = true;\n      this.$store.dispatch(\"auth/register\", user).then(data => {\n        this.message = data.message;\n        this.successful = true;\n        this.loading = false;\n      }, error => {\n        this.message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        this.successful = false;\n        this.loading = false;\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAuDA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,YAAtB,QAA0C,cAA1C;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,eAAe;AACbC,MAAI,EAAE,cADO;AAEbC,YAAU,EAAE;AACVL,QADU;AAEVC,SAFU;AAGVC;AAHU,GAFC;;AAObI,MAAI,GAAG;AACL,UAAMC,MAAK,GAAIJ,GAAG,CAACK,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,cAAQ,EAAEP,GAAE,CACTQ,MADO,GAEPC,QAFO,CAEE,uBAFF,EAGPC,GAHO,CAGH,CAHG,EAGA,gCAHA,EAIPC,GAJO,CAIH,EAJG,EAIC,gCAJD,CADsB;AAMhCC,QAAE,EAAEZ,GAAE,CACHQ,MADC,GAEDC,QAFC,CAEQ,iBAFR,EAGDC,GAHC,CAGG,CAHH,EAGM,gCAHN,EAIDC,GAJC,CAIG,EAJH,EAIO,gCAJP,CAN4B;AAWhCE,WAAK,EAAEb,GAAE,CACNQ,MADI,GAEJC,QAFI,CAEK,oBAFL,EAGJI,KAHI,CAGE,mBAHF,EAIJF,GAJI,CAIA,EAJA,EAII,gCAJJ,CAXyB;AAgBhCG,cAAQ,EAAEd,GAAE,CACTQ,MADO,GAEPC,QAFO,CAEE,uBAFF,EAGPC,GAHO,CAGH,CAHG,EAGA,gCAHA,EAIPC,GAJO,CAIH,EAJG,EAIC,gCAJD;AAhBsB,KAAnB,CAAf;AAsBA,WAAO;AACLI,gBAAU,EAAE,KADP;AAELC,aAAO,EAAE,KAFJ;AAGLC,aAAO,EAAE,EAHJ;AAILb;AAJK,KAAP;AAMD,GApCY;;AAqCbc,UAAQ,EAAE;AACRC,YAAQ,GAAG;AACT,aAAO,KAAKC,MAAL,CAAYC,KAAZ,CAAkBC,IAAlB,CAAuBC,MAAvB,CAA8BJ,QAArC;AACD;;AAHO,GArCG;;AA0CbK,SAAO,GAAG;AACR,QAAI,KAAKL,QAAT,EAAmB;AACjB,WAAKM,OAAL,CAAaC,IAAb,CAAkB,UAAlB;AACF;AACD,GA9CY;;AA+CbC,SAAO,EAAE;AACPC,kBAAc,CAACC,IAAD,EAAO;AACnB,WAAKZ,OAAL,GAAe,EAAf;AACA,WAAKF,UAAL,GAAkB,KAAlB;AACA,WAAKC,OAAL,GAAe,IAAf;AACA,WAAKI,MAAL,CAAYU,QAAZ,CAAqB,eAArB,EAAsCD,IAAtC,EAA4CE,IAA5C,CACG5B,IAAD,IAAU;AACR,aAAKc,OAAL,GAAed,IAAI,CAACc,OAApB;AACA,aAAKF,UAAL,GAAkB,IAAlB;AACA,aAAKC,OAAL,GAAe,KAAf;AACD,OALH,EAMGgB,KAAD,IAAW;AACT,aAAKf,OAAL,GACGe,KAAK,CAACC,QAAN,IACCD,KAAK,CAACC,QAAN,CAAe9B,IADhB,IAEC6B,KAAK,CAACC,QAAN,CAAe9B,IAAf,CAAoBc,OAFtB,IAGAe,KAAK,CAACf,OAHN,IAIAe,KAAK,CAACE,QAAN,EALF;AAMA,aAAKnB,UAAL,GAAkB,KAAlB;AACA,aAAKC,OAAL,GAAe,KAAf;AACF,OAfF;AAiBD;;AAtBM;AA/CI,CAAf","names":["Form","Field","ErrorMessage","yup","name","components","data","schema","object","shape","username","string","required","min","max","id","email","password","successful","loading","message","computed","loggedIn","$store","state","auth","status","mounted","$router","push","methods","handleRegister","user","dispatch","then","error","response","toString"],"sourceRoot":"","sources":["C:\\javaram\\javaram-fontend\\vue\\src\\components\\RegisterPage.vue"],"sourcesContent":["<template>\n  <div class=\"col-lg-12\">\n    <div class=\"card card-container\">\n      <img\n        id=\"profile-img\"\n        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n        class=\"profile-img-card\"\n      />\n      <Form @submit=\"handleRegister\" :validation-schema=\"schema\">\n        <div v-if=\"!successful\">\n          <div class=\"form-group\">\n            <label for=\"username\">Username</label>\n            <Field name=\"username\" type=\"text\" class=\"form-control\" />\n            <ErrorMessage name=\"username\" class=\"error-feedback\" />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"id\">id</label>\n            <Field name=\"id\" type=\"id\" class=\"form-control\" />\n            <ErrorMessage name=\"id\" class=\"error-feedback\" />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <Field name=\"password\" type=\"password\" class=\"form-control\" />\n            <ErrorMessage name=\"password\" class=\"error-feedback\" />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"email\">Email</label>\n            <Field name=\"email\" type=\"email\" class=\"form-control\" />\n            <ErrorMessage name=\"email\" class=\"error-feedback\" />\n          </div>\n\n          <div class=\"form-group\">\n            <button id = \"login_button\" class=\"btn btn-block\" :disabled=\"loading\">\n              <span\n                v-show=\"loading\"\n                class=\"spinner-border spinner-border-sm\"\n              ></span>\n              Sign Up\n            </button>\n          </div>\n        </div>\n      </Form>\n\n      <div\n        v-if=\"message\"\n        class=\"alert\"\n        :class=\"successful ? 'alert-success' : 'alert-danger'\"\n      >\n        {{ message }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Form, Field, ErrorMessage } from \"vee-validate\";\nimport * as yup from \"yup\";\nexport default {\n  name: \"RegisterPage\",\n  components: {\n    Form,\n    Field,\n    ErrorMessage,\n  },\n  data() {\n    const schema = yup.object().shape({\n      username: yup\n        .string()\n        .required(\"Username is required!\")\n        .min(3, \"Must be at least 3 characters!\")\n        .max(20, \"Must be maximum 20 characters!\"),\n      id: yup\n        .string()\n        .required(\"Id is required!\")\n        .min(6, \"Must be at least 6 characters!\")\n        .max(40, \"Must be maximum 40 characters!\"),\n      email: yup\n        .string()\n        .required(\"Email is required!\")\n        .email(\"Email is invalid!\")\n        .max(50, \"Must be maximum 50 characters!\"),\n      password: yup\n        .string()\n        .required(\"Password is required!\")\n        .min(6, \"Must be at least 6 characters!\")\n        .max(40, \"Must be maximum 40 characters!\"),\n    });\n    return {\n      successful: false,\n      loading: false,\n      message: \"\",\n      schema,\n    };\n  },\n  computed: {\n    loggedIn() {\n      return this.$store.state.auth.status.loggedIn;\n    },\n  },\n  mounted() {\n    if (this.loggedIn) {\n      this.$router.push(\"/profile\");\n    }\n  },\n  methods: {\n    handleRegister(user) {\n      this.message = \"\";\n      this.successful = false;\n      this.loading = true;\n      this.$store.dispatch(\"auth/register\", user).then(\n        (data) => {\n          this.message = data.message;\n          this.successful = true;\n          this.loading = false;\n        },\n        (error) => {\n          this.message =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n          this.successful = false;\n          this.loading = false;\n        }\n      );\n    },\n  },\n};\n</script>\n\n<style scoped>\nlabel {\n  display: block;\n  margin-top: 10px;\n}\n.card-container.card {\n    max-width: 350px !important;\n    padding: 40px 40px;\n}\n\n\n \n.card {\n  background-color: #f7f7f7;\n  padding: 20px 25px 30px;\n  margin: 0 auto 25px;\n  /* 세로 위치 조정 */\n  margin-top: 8%; \n  /* 세로 위치 조정 */\n  -moz-border-radius: 2px;\n  -webkit-border-radius: 2px;\n  border-radius: 2px;\n  -moz-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\n  -webkit-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\n  box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\n  min-width: min-content;\n  align-items: center;\n  padding: 20px;\n  position: absolute;\n  /* 가로 위치 조정 */\n  left: 35%\n  /* 가로 위치 조정 */\n}\n.profile-img-card {\n  width: 96px;\n  height: 96px;\n  margin: 0 auto 10px;\n  display: block;\n  -moz-border-radius: 50%;\n  -webkit-border-radius: 50%;\n  border-radius: 50%;\n}\n.error-feedback {\n  color: red;\n}\n#login_button {\n  margin-top: 8px;\n  font-size: 14px;\n  /* width: 222px; */\n  color: white;\n  background: #00C9BE;\n}\n</style>"]},"metadata":{},"sourceType":"module"}