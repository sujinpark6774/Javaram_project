{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      days: [],\n      // day: Array,\n      totals: [] // attributes: [\n      //   {\n      //     dot: true,\n      //     dates: [\n      //       new Date(2022,2,1),\n      //       new Date(2022,2,10),\n      //       new Date(2022,2,25),\n      //       // new Date(2022-03-06),\n      //     ]\n      //   }\n      // ],\n\n    };\n  },\n\n  computed: {\n    dates() {\n      return this.totals.map(total => total.start_date);\n    },\n\n    attributes() {\n      return this.dates.map(date => ({\n        highlight: true,\n        dates: date\n      }));\n    }\n\n  },\n  methods: {\n    // Todo 데이터(user 기준) 가져오기\n    TodoListU() {\n      axios.get(\"/todo/?user=\" + this.user).then(response => {\n        console.log(response.data);\n        this.totals = response.data;\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n\n    // Calendar에서 선택한 날짜 받음\n    onDayClick(day) {\n      const idx = this.days.findIndex(d => d.id === day.id);\n\n      if (idx >= 0) {\n        this.days.splice(idx, 1);\n      } else {\n        this.days = [], this.days.push({\n          id: day.id,\n          date: day.date\n        });\n        console.log(this.days);\n        this.day = this.days[0];\n      } // Calendar에서 선택한 날짜를 TodoPage로 보내기 \n\n\n      this.$emit(\"clickdateC\", this.day);\n    }\n\n  },\n\n  mounted() {\n    this.TodoListU();\n  }\n\n};","map":{"version":3,"mappings":"AAcA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACbC,MAAI,GAAG;AACL,WAAO;AACLC,UAAI,EAAE,EADD;AAEL;AACAC,YAAM,EAAE,EAHH,CAKL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAfK,KAAP;AAoBD,GAtBY;;AAwBbC,UAAQ,EAAE;AACRC,SAAK,GAAG;AACN,aAAO,KAAKF,MAAL,CAAYG,GAAZ,CAAgBC,KAAI,IAAKA,KAAK,CAACC,UAA/B,CAAP;AACD,KAHO;;AAIRC,cAAU,GAAG;AACX,aAAO,KAAKJ,KAAL,CAAWC,GAAX,CAAeI,IAAG,KAAM;AAC7BC,iBAAS,EAAE,IADkB;AAE7BN,aAAK,EAAEK;AAFsB,OAAN,CAAlB,CAAP;AAID;;AATO,GAxBG;AAoCbE,SAAO,EAAE;AACP;AACAC,aAAS,GAAG;AACVb,WAAI,CACCc,GADL,CACS,iBAAiB,KAAKC,IAD/B,EAEKC,IAFL,CAEUC,QAAO,IAAK;AACdC,eAAO,CAACC,GAAR,CAAYF,QAAQ,CAAChB,IAArB;AACA,aAAKE,MAAL,GAAcc,QAAQ,CAAChB,IAAvB;AACH,OALL,EAMKmB,KANL,CAMWC,KAAK;AACRH,eAAO,CAACC,GAAR,CAAYE,CAAZ;AACH,OARL;AASD,KAZM;;AAcP;AACAC,cAAU,CAACC,GAAD,EAAM;AACd,YAAMC,GAAE,GAAI,KAAKtB,IAAL,CAAUuB,SAAV,CAAoBC,KAAKA,CAAC,CAACC,EAAF,KAASJ,GAAG,CAACI,EAAtC,CAAZ;;AACA,UAAIH,GAAE,IAAK,CAAX,EAAc;AACZ,aAAKtB,IAAL,CAAU0B,MAAV,CAAiBJ,GAAjB,EAAsB,CAAtB;AACF,OAFA,MAEO;AACL,aAAKtB,IAAL,GAAY,EAAZ,EACA,KAAKA,IAAL,CAAU2B,IAAV,CAAe;AACbF,YAAE,EAAEJ,GAAG,CAACI,EADK;AAEbjB,cAAI,EAAEa,GAAG,CAACb;AAFG,SAAf,CADA;AAKAQ,eAAO,CAACC,GAAR,CAAY,KAAKjB,IAAjB;AACA,aAAKqB,GAAL,GAAS,KAAKrB,IAAL,CAAU,CAAV,CAAT;AACF,OAZc,CAcd;;;AACA,WAAK4B,KAAL,CAAW,YAAX,EAAwB,KAAKP,GAA7B;AACD;;AA/BM,GApCI;;AAuEbQ,SAAO,GAAG;AACR,SAAKlB,SAAL;AACD;;AAzEY,CAAf","names":["axios","data","days","totals","computed","dates","map","total","start_date","attributes","date","highlight","methods","TodoListU","get","user","then","response","console","log","catch","e","onDayClick","day","idx","findIndex","d","id","splice","push","$emit","mounted"],"sourceRoot":"","sources":["C:\\eclipse_portable\\WORKSPACE\\javaram\\vue\\src\\components\\todo\\component\\TodoCalendar.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <CalendarComp \r\n          is-expanded \r\n          :attributes=\"attributes\" \r\n          :from-date=\"new Date(2022, 2, 1)\"\r\n          @dayclick=\"onDayClick\" />\r\n        <!-- <h6>todoCalendar Component: {{ day.id }}</h6> -->\r\n    </div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      days: [],\r\n      // day: Array,\r\n      totals: [],\r\n\r\n      // attributes: [\r\n      //   {\r\n      //     dot: true,\r\n      //     dates: [\r\n      //       new Date(2022,2,1),\r\n      //       new Date(2022,2,10),\r\n      //       new Date(2022,2,25),\r\n      //       // new Date(2022-03-06),\r\n      //     ]\r\n      //   }\r\n      // ],\r\n\r\n\r\n\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    dates() {\r\n      return this.totals.map(total => total.start_date);\r\n    },\r\n    attributes() {\r\n      return this.dates.map(date => ({\r\n        highlight: true,\r\n        dates: date,\r\n      }));\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    // Todo 데이터(user 기준) 가져오기\r\n    TodoListU() {\r\n      axios\r\n          .get(\"/todo/?user=\" + this.user)\r\n          .then(response => {\r\n              console.log(response.data);\r\n              this.totals = response.data;\r\n          })\r\n          .catch(e => {\r\n              console.log(e);\r\n          })\r\n    },\r\n\r\n    // Calendar에서 선택한 날짜 받음\r\n    onDayClick(day) {\r\n      const idx = this.days.findIndex(d => d.id === day.id);\r\n      if (idx >= 0) {\r\n        this.days.splice(idx, 1);\r\n      } else {\r\n        this.days = [],\r\n        this.days.push({\r\n          id: day.id,\r\n          date: day.date,\r\n        });\r\n        console.log(this.days);\r\n        this.day=this.days[0];\r\n      }\r\n\r\n      // Calendar에서 선택한 날짜를 TodoPage로 보내기 \r\n      this.$emit(\"clickdateC\",this.day);\r\n    },\r\n\r\n  },\r\n\r\n  mounted() {\r\n    this.TodoListU();\r\n  },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module"}