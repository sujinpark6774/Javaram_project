{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      days: [],\n      day: Array,\n      total_todos: [],\n      attributes: [{\n        dot: true,\n        dates: [new Date(2018, 0, 1), new Date(2022, 3, 26), new Date(2022, 3, 29)]\n      }]\n    };\n  },\n\n  computed: {\n    dates() {\n      return this.days.map(day => day.date);\n    },\n\n    attributes() {\n      return this.dates.map(date => ({\n        highlight: true,\n        dates: date\n      }));\n    }\n\n  },\n  methods: {\n    // Calendar에서 선택한 날짜 받음\n    onDayClick(day) {\n      const idx = this.days.findIndex(d => d.id === day.id);\n\n      if (idx >= 0) {\n        this.days.splice(idx, 1);\n      } else {\n        this.days = [], this.days.push({\n          id: day.id,\n          date: day.date\n        });\n        console.log(this.days);\n        this.day = this.days[0];\n      } // Calendar에서 선택한 날짜를 TodoPage로 보내기 \n\n\n      this.$emit(\"clickdateC\", this.day);\n    },\n\n    // Todo 데이터(user 기준) 가져오기\n    TodoListU() {\n      axios.get(\"/todo/?user=\" + this.user).then(response => {\n        console.log(response.data);\n        this.total_todos = response.data;\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAgBA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACbC,MAAI,GAAG;AACL,WAAO;AACLC,UAAI,EAAE,EADD;AAELC,SAAG,EAAEC,KAFA;AAGLC,iBAAW,EAAE,EAHR;AAILC,gBAAU,EAAE,CACV;AACEC,WAAG,EAAE,IADP;AAEEC,aAAK,EAAE,CACL,IAAIC,IAAJ,CAAS,IAAT,EAAc,CAAd,EAAgB,CAAhB,CADK,EAEL,IAAIA,IAAJ,CAAS,IAAT,EAAc,CAAd,EAAgB,EAAhB,CAFK,EAGL,IAAIA,IAAJ,CAAS,IAAT,EAAc,CAAd,EAAgB,EAAhB,CAHK;AAFT,OADU;AAJP,KAAP;AAeD,GAjBY;;AAmBbC,UAAQ,EAAE;AACRF,SAAK,GAAG;AACN,aAAO,KAAKN,IAAL,CAAUS,GAAV,CAAcR,GAAE,IAAKA,GAAG,CAACS,IAAzB,CAAP;AACD,KAHO;;AAKRN,cAAU,GAAG;AACX,aAAO,KAAKE,KAAL,CAAWG,GAAX,CAAeC,IAAG,KAAM;AAC7BC,iBAAS,EAAE,IADkB;AAE7BL,aAAK,EAAEI;AAFsB,OAAN,CAAlB,CAAP;AAID;;AAVO,GAnBG;AAgCbE,SAAO,EAAE;AACP;AACAC,cAAU,CAACZ,GAAD,EAAM;AACd,YAAMa,GAAE,GAAI,KAAKd,IAAL,CAAUe,SAAV,CAAoBC,KAAKA,CAAC,CAACC,EAAF,KAAShB,GAAG,CAACgB,EAAtC,CAAZ;;AACA,UAAIH,GAAE,IAAK,CAAX,EAAc;AACZ,aAAKd,IAAL,CAAUkB,MAAV,CAAiBJ,GAAjB,EAAsB,CAAtB;AACF,OAFA,MAEO;AACL,aAAKd,IAAL,GAAY,EAAZ,EACA,KAAKA,IAAL,CAAUmB,IAAV,CAAe;AACbF,YAAE,EAAEhB,GAAG,CAACgB,EADK;AAEbP,cAAI,EAAET,GAAG,CAACS;AAFG,SAAf,CADA;AAKAU,eAAO,CAACC,GAAR,CAAY,KAAKrB,IAAjB;AACA,aAAKC,GAAL,GAAS,KAAKD,IAAL,CAAU,CAAV,CAAT;AACF,OAZc,CAcd;;;AACA,WAAKsB,KAAL,CAAW,YAAX,EAAwB,KAAKrB,GAA7B;AACD,KAlBM;;AAoBP;AACAsB,aAAS,GAAG;AAERzB,WAAI,CACC0B,GADL,CACS,iBAAiB,KAAKC,IAD/B,EAEKC,IAFL,CAEUC,QAAO,IAAK;AACdP,eAAO,CAACC,GAAR,CAAYM,QAAQ,CAAC5B,IAArB;AACA,aAAKI,WAAL,GAAmBwB,QAAQ,CAAC5B,IAA5B;AACH,OALL,EAMK6B,KANL,CAMWC,KAAK;AACRT,eAAO,CAACC,GAAR,CAAYQ,CAAZ;AACH,OARL;AASJ;;AAhCO;AAhCI,CAAf","names":["axios","data","days","day","Array","total_todos","attributes","dot","dates","Date","computed","map","date","highlight","methods","onDayClick","idx","findIndex","d","id","splice","push","console","log","$emit","TodoListU","get","user","then","response","catch","e"],"sourceRoot":"","sources":["C:\\eclipse_portable\\WORKSPACE\\javaram\\vue\\src\\components\\todo\\component\\TodoCalendar.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <CalendarComp \r\n          is-expanded \r\n          :attributes=\"attributes\" \r\n          :columns=\"$screens({ lg: 2 }, 1)\"\r\n          :from-date=\"new Date(2018, 0, 1)\"\r\n          @dayclick=\"onDayClick\" />\r\n        <!-- <h6>{{ days[0] }}</h6> -->\r\n        <h6>todoCalendar Component: {{ day.id }}</h6>\r\n    </div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      days: [],\r\n      day: Array,\r\n      total_todos: [],\r\n      attributes: [\r\n        {\r\n          dot: true,\r\n          dates: [\r\n            new Date(2018,0,1),\r\n            new Date(2022,3,26),\r\n            new Date(2022,3,29),\r\n          ]\r\n        }\r\n      ],\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    dates() {\r\n      return this.days.map(day => day.date);\r\n    },\r\n\r\n    attributes() {\r\n      return this.dates.map(date => ({\r\n        highlight: true,\r\n        dates: date,\r\n      }));\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    // Calendar에서 선택한 날짜 받음\r\n    onDayClick(day) {\r\n      const idx = this.days.findIndex(d => d.id === day.id);\r\n      if (idx >= 0) {\r\n        this.days.splice(idx, 1);\r\n      } else {\r\n        this.days = [],\r\n        this.days.push({\r\n          id: day.id,\r\n          date: day.date,\r\n        });\r\n        console.log(this.days);\r\n        this.day=this.days[0];\r\n      }\r\n\r\n      // Calendar에서 선택한 날짜를 TodoPage로 보내기 \r\n      this.$emit(\"clickdateC\",this.day);\r\n    },\r\n    \r\n    // Todo 데이터(user 기준) 가져오기\r\n    TodoListU() {\r\n\r\n        axios\r\n            .get(\"/todo/?user=\" + this.user)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                this.total_todos = response.data;\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            })\r\n    }\r\n  },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module"}