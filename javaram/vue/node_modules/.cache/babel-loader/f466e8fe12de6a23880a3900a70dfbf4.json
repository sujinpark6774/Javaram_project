{"ast":null,"code":"import { createWebHistory, createRouter } from \"vue-router\";\nimport HomePage from \"./components/HomePage.vue\";\nimport RegisterPage from \"./components/RegisterPage.vue\";\nimport SearchPage from \"./components/SearchPage.vue\";\nimport ModalPage from \"./components/ModalPage.vue\";\nimport TodoPage from \"./components/TodoPage.vue\";\nimport MailPage from \"./components/MailPage.vue\";\nimport ConferPage from \"./components/ConferPage.vue\";\nimport NoticePage from \"./components/NoticePage.vue\"; // lazy-loaded\n\nconst ProfilePage = () => import(\"./components/ProfilePage.vue\");\n\nconst BoardAdmin = () => import(\"./components/BoardAdmin.vue\");\n\nconst BoardModerator = () => import(\"./components/BoardModerator.vue\");\n\nconst BoardUser = () => import(\"./components/BoardUser.vue\");\n\nconst routes = [{\n  path: \"/\",\n  name: \"HomePage\",\n  component: HomePage\n}, {\n  path: \"/registerpage\",\n  component: RegisterPage\n}, {\n  path: \"/searchpage\",\n  component: SearchPage\n}, {\n  path: \"/modalpage\",\n  component: ModalPage\n}, {\n  path: \"/todopage\",\n  component: TodoPage\n}, {\n  path: \"/mailpage\",\n  component: MailPage\n}, {\n  path: \"/conferpage\",\n  component: ConferPage\n}, {\n  path: \"/noticepage\",\n  component: NoticePage\n}, {\n  path: \"/profilepage\",\n  name: \"profilepage\",\n  // lazy-loaded\n  component: ProfilePage\n}, {\n  path: \"/admin\",\n  name: \"adminpage\",\n  // lazy-loaded\n  component: BoardAdmin\n}, {\n  path: \"/mod\",\n  name: \"moderator\",\n  // lazy-loaded\n  component: BoardModerator\n}, {\n  path: \"/user\",\n  name: \"user\",\n  // lazy-loaded\n  component: BoardUser\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n}); //router.beforeEach((to, from, next) => {\n//    const publicPages = ['/loginpage', '/registerpage', '/homepage'];\n//    const authRequired = !publicPages.includes(to.path);\n//    const loggedIn = localStorage.getItem('user');\n// trying to access a restricted page + not logged in\n// redirect to login page\n//    if (authRequired && !loggedIn) {\n//      next('/loginpage');\n//    } else {\n//      next();\n//    }\n//  });\n\nexport default router;","map":{"version":3,"sources":["C:/javaram/javaram-fontend/vue/src/router.js"],"names":["createWebHistory","createRouter","HomePage","RegisterPage","SearchPage","ModalPage","TodoPage","MailPage","ConferPage","NoticePage","ProfilePage","BoardAdmin","BoardModerator","BoardUser","routes","path","name","component","router","history"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,YAA3B,QAA+C,YAA/C;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,UAAP,MAAuB,6BAAvB,C,CACA;;AACA,MAAMC,WAAW,GAAG,MAAM,OAAO,8BAAP,CAA1B;;AACA,MAAMC,UAAU,GAAG,MAAM,OAAO,6BAAP,CAAzB;;AACA,MAAMC,cAAc,GAAG,MAAM,OAAO,iCAAP,CAA7B;;AACA,MAAMC,SAAS,GAAG,MAAM,OAAO,4BAAP,CAAxB;;AACA,MAAMC,MAAM,GAAG,CACb;AACEC,EAAAA,IAAI,EAAE,GADR;AAEEC,EAAAA,IAAI,EAAE,UAFR;AAGEC,EAAAA,SAAS,EAAEf;AAHb,CADa,EAMb;AACEa,EAAAA,IAAI,EAAE,eADR;AAEEE,EAAAA,SAAS,EAAEd;AAFb,CANa,EAUb;AACEY,EAAAA,IAAI,EAAE,aADR;AAEEE,EAAAA,SAAS,EAAEb;AAFb,CAVa,EAcb;AACEW,EAAAA,IAAI,EAAE,YADR;AAEEE,EAAAA,SAAS,EAAEZ;AAFb,CAda,EAkBb;AACEU,EAAAA,IAAI,EAAE,WADR;AAEEE,EAAAA,SAAS,EAAEX;AAFb,CAlBa,EAsBb;AACES,EAAAA,IAAI,EAAE,WADR;AAEEE,EAAAA,SAAS,EAAEV;AAFb,CAtBa,EA0Bb;AACEQ,EAAAA,IAAI,EAAE,aADR;AAEEE,EAAAA,SAAS,EAAET;AAFb,CA1Ba,EA8Bb;AACEO,EAAAA,IAAI,EAAE,aADR;AAEEE,EAAAA,SAAS,EAAER;AAFb,CA9Ba,EAkCb;AACEM,EAAAA,IAAI,EAAE,cADR;AAEEC,EAAAA,IAAI,EAAE,aAFR;AAGE;AACAC,EAAAA,SAAS,EAAEP;AAJb,CAlCa,EAwCb;AACEK,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGE;AACAC,EAAAA,SAAS,EAAEN;AAJb,CAxCa,EA8Cb;AACEI,EAAAA,IAAI,EAAE,MADR;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGE;AACAC,EAAAA,SAAS,EAAEL;AAJb,CA9Ca,EAoDb;AACEG,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,IAAI,EAAE,MAFR;AAGE;AACAC,EAAAA,SAAS,EAAEJ;AAJb,CApDa,CAAf;AA2DA,MAAMK,MAAM,GAAGjB,YAAY,CAAC;AAC1BkB,EAAAA,OAAO,EAAEnB,gBAAgB,EADC;AAE1Bc,EAAAA;AAF0B,CAAD,CAA3B,C,CAMA;AACA;AACA;AACA;AACI;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeI,MAAf","sourcesContent":["import { createWebHistory, createRouter } from \"vue-router\";\nimport HomePage from \"./components/HomePage.vue\";\nimport RegisterPage from \"./components/RegisterPage.vue\";\nimport SearchPage from \"./components/SearchPage.vue\";\nimport ModalPage from \"./components/ModalPage.vue\";\nimport TodoPage from \"./components/TodoPage.vue\";\nimport MailPage from \"./components/MailPage.vue\";\nimport ConferPage from \"./components/ConferPage.vue\";\nimport NoticePage from \"./components/NoticePage.vue\";\n// lazy-loaded\nconst ProfilePage = () => import(\"./components/ProfilePage.vue\")\nconst BoardAdmin = () => import(\"./components/BoardAdmin.vue\")\nconst BoardModerator = () => import(\"./components/BoardModerator.vue\")\nconst BoardUser = () => import(\"./components/BoardUser.vue\")\nconst routes = [\n  {\n    path: \"/\",\n    name: \"HomePage\",\n    component: HomePage,\n  },\n  {\n    path: \"/registerpage\",\n    component: RegisterPage,\n  },\n  {\n    path: \"/searchpage\",\n    component: SearchPage,\n  },\n  {\n    path: \"/modalpage\",\n    component: ModalPage,\n  },\n  {\n    path: \"/todopage\",\n    component: TodoPage,\n  },\n  {\n    path: \"/mailpage\",\n    component: MailPage,\n  },\n  {\n    path: \"/conferpage\",\n    component: ConferPage,\n  },\n  {\n    path: \"/noticepage\",\n    component: NoticePage,\n  },\n  {\n    path: \"/profilepage\",\n    name: \"profilepage\",\n    // lazy-loaded\n    component: ProfilePage,\n  },\n  {\n    path: \"/admin\",\n    name: \"adminpage\",\n    // lazy-loaded\n    component: BoardAdmin,\n  },\n  {\n    path: \"/mod\",\n    name: \"moderator\",\n    // lazy-loaded\n    component: BoardModerator,\n  },\n  {\n    path: \"/user\",\n    name: \"user\",\n    // lazy-loaded\n    component: BoardUser,\n  },\n];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n});\n\n\n//router.beforeEach((to, from, next) => {\n//    const publicPages = ['/loginpage', '/registerpage', '/homepage'];\n//    const authRequired = !publicPages.includes(to.path);\n//    const loggedIn = localStorage.getItem('user');\n    // trying to access a restricted page + not logged in\n    // redirect to login page\n//    if (authRequired && !loggedIn) {\n//      next('/loginpage');\n//    } else {\n//      next();\n//    }\n//  });\n  \nexport default router;\n\n"]},"metadata":{},"sourceType":"module"}