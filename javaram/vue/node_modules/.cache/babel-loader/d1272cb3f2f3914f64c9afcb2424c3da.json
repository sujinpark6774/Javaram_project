{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      days: [],\n      // day: Array,\n      totals: [],\n      // temp: [],\n      attributes: [{\n        dot: true,\n        dates: [{\n          start: new Date(2022, 2, 1),\n          end: new Date(2022, 2, 6)\n        } // new Date(2022,2,10),\n        // new Date(2022,2,25),\n        // new Date(2022-03-06),\n        ]\n      }]\n    };\n  },\n\n  // computed: {\n  //   dates() {\n  //     return this.totals.map(total => total.start_date);\n  //   },\n  //   attributes() {\n  //     return this.dates.map(date => ({\n  //       highlight: true,\n  //       dates: date,\n  //     }));\n  //   },\n  // },\n  methods: {\n    // Todo 데이터(user 기준) 가져오기 -> 이벤트와 무관하게 기본으로 가져와야 함\n    TodoListU() {\n      axios.get(\"/todo/?user=\" + this.user).then(response => {\n        console.log(response.data);\n        this.totals = response.data;\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n\n    getValueOfList() {\n      this.totals.forEach((value, index) => {\n        console.log('## index: ' + index + '번째의 값: ' + JSON.stringify(value));\n        console.log('## index: ' + index + '번째의 name: ' + value['name']);\n      });\n    },\n\n    // Calendar에서 선택한 날짜 받음\n    onDayClick(day) {\n      const idx = this.days.findIndex(d => d.id === day.id);\n\n      if (idx >= 0) {\n        this.days.splice(idx, 1);\n      } else {\n        this.days = [], this.days.push({\n          id: day.id,\n          date: day.date\n        });\n        console.log(this.days);\n        this.day = this.days[0];\n      } // Calendar에서 선택한 날짜를 TodoPage로 보내기 \n\n\n      this.$emit(\"clickdateC\", this.day);\n    }\n\n  },\n\n  mounted() {\n    this.TodoListU();\n    this.getValueOfList();\n  }\n\n};","map":{"version":3,"mappings":"AAeA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACbC,MAAI,GAAG;AACL,WAAO;AACLC,UAAI,EAAE,EADD;AAEL;AACAC,YAAM,EAAE,EAHH;AAKL;AAEAC,gBAAU,EAAE,CACV;AACEC,WAAG,EAAE,IADP;AAEEC,aAAK,EAAE,CACL;AAACC,eAAK,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAc,CAAd,EAAgB,CAAhB,CAAR;AAA4BC,aAAG,EAAE,IAAID,IAAJ,CAAS,IAAT,EAAc,CAAd,EAAgB,CAAhB;AAAjC,SADK,CAEL;AACA;AACA;AAJK;AAFT,OADU;AAPP,KAAP;AAsBD,GAxBY;;AA0Bb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAE,SAAO,EAAE;AACP;AACAC,aAAS,GAAG;AACVX,WAAI,CACDY,GADH,CACO,iBAAiB,KAAKC,IAD7B,EAEGC,IAFH,CAEQC,QAAO,IAAK;AACdC,eAAO,CAACC,GAAR,CAAYF,QAAQ,CAACd,IAArB;AACA,aAAKE,MAAL,GAAcY,QAAQ,CAACd,IAAvB;AACH,OALH,EAMGiB,KANH,CAMSC,KAAK;AACRH,eAAO,CAACC,GAAR,CAAYE,CAAZ;AACH,OARH;AASD,KAZM;;AAcPC,kBAAc,GAAG;AACf,WAAKjB,MAAL,CAAYkB,OAAZ,CAAoB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACpCP,eAAO,CAACC,GAAR,CAAY,eAAeM,KAAf,GAAwB,SAAxB,GAAoCC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAhD;AACAN,eAAO,CAACC,GAAR,CAAY,eAAeM,KAAf,GAAwB,YAAxB,GAAuCD,KAAK,CAAC,MAAD,CAAxD;AACD,OAHD;AAID,KAnBM;;AAwBP;AACAI,cAAU,CAACC,GAAD,EAAM;AACd,YAAMC,GAAE,GAAI,KAAK1B,IAAL,CAAU2B,SAAV,CAAoBC,KAAKA,CAAC,CAACC,EAAF,KAASJ,GAAG,CAACI,EAAtC,CAAZ;;AACA,UAAIH,GAAE,IAAK,CAAX,EAAc;AACZ,aAAK1B,IAAL,CAAU8B,MAAV,CAAiBJ,GAAjB,EAAsB,CAAtB;AACF,OAFA,MAEO;AACL,aAAK1B,IAAL,GAAY,EAAZ,EACA,KAAKA,IAAL,CAAU+B,IAAV,CAAe;AACbF,YAAE,EAAEJ,GAAG,CAACI,EADK;AAEbG,cAAI,EAAEP,GAAG,CAACO;AAFG,SAAf,CADA;AAKAlB,eAAO,CAACC,GAAR,CAAY,KAAKf,IAAjB;AACA,aAAKyB,GAAL,GAAS,KAAKzB,IAAL,CAAU,CAAV,CAAT;AACF,OAZc,CAcd;;;AACA,WAAKiC,KAAL,CAAW,YAAX,EAAwB,KAAKR,GAA7B;AACD;;AAzCM,GAtCI;;AAmFbS,SAAO,GAAG;AACR,SAAKzB,SAAL;AACA,SAAKS,cAAL;AACD;;AAtFY,CAAf","names":["axios","data","days","totals","attributes","dot","dates","start","Date","end","methods","TodoListU","get","user","then","response","console","log","catch","e","getValueOfList","forEach","value","index","JSON","stringify","onDayClick","day","idx","findIndex","d","id","splice","push","date","$emit","mounted"],"sourceRoot":"","sources":["C:\\eclipse_portable\\WORKSPACE\\javaram\\vue\\src\\components\\todo\\component\\TodoCalendar.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <CalendarComp \r\n          is-expanded \r\n          :attributes=\"attributes\" \r\n          :from-date=\"new Date(2022, 2, 1)\"\r\n          @dayclick=\"onDayClick\" />\r\n        <!-- <h6>todoCalendar Component: {{ day.id }}</h6> -->\r\n        <h6>temp2: {{ this.temp2 }}</h6>\r\n    </div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      days: [],\r\n      // day: Array,\r\n      totals: [],\r\n\r\n      // temp: [],\r\n\r\n      attributes: [\r\n        {\r\n          dot: true,\r\n          dates: [\r\n            {start: new Date(2022,2,1), end: new Date(2022,2,6)},\r\n            // new Date(2022,2,10),\r\n            // new Date(2022,2,25),\r\n            // new Date(2022-03-06),\r\n          ]\r\n        }\r\n      ],\r\n\r\n\r\n\r\n    };\r\n  },\r\n\r\n  // computed: {\r\n  //   dates() {\r\n  //     return this.totals.map(total => total.start_date);\r\n  //   },\r\n  //   attributes() {\r\n  //     return this.dates.map(date => ({\r\n  //       highlight: true,\r\n  //       dates: date,\r\n  //     }));\r\n  //   },\r\n  // },\r\n\r\n  methods: {\r\n    // Todo 데이터(user 기준) 가져오기 -> 이벤트와 무관하게 기본으로 가져와야 함\r\n    TodoListU() {\r\n      axios\r\n        .get(\"/todo/?user=\" + this.user)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            this.totals = response.data;\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        })\r\n    },\r\n    \r\n    getValueOfList() {\r\n      this.totals.forEach((value, index) => { \r\n        console.log('## index: ' + index +  '번째의 값: ' + JSON.stringify(value))\r\n        console.log('## index: ' + index +  '번째의 name: ' + value['name'])\r\n      })\r\n    },\r\n\r\n\r\n\r\n\r\n    // Calendar에서 선택한 날짜 받음\r\n    onDayClick(day) {\r\n      const idx = this.days.findIndex(d => d.id === day.id);\r\n      if (idx >= 0) {\r\n        this.days.splice(idx, 1);\r\n      } else {\r\n        this.days = [],\r\n        this.days.push({\r\n          id: day.id,\r\n          date: day.date,\r\n        });\r\n        console.log(this.days);\r\n        this.day=this.days[0];\r\n      }\r\n\r\n      // Calendar에서 선택한 날짜를 TodoPage로 보내기 \r\n      this.$emit(\"clickdateC\",this.day);\r\n    },\r\n\r\n  },\r\n\r\n  mounted() {\r\n    this.TodoListU();\r\n    this.getValueOfList();\r\n  },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module"}