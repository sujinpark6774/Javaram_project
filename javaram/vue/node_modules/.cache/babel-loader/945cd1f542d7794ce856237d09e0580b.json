{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-1919b17f\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"notice-list-wrap\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"notice_tab\"\n}, [/*#__PURE__*/_createElementVNode(\"h3\", {\n  id: \"notice_title\"\n}, \"Notice\")], -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = {\n  id: \"notice-list-table\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"No.\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Title\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Writer\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Date\")])], -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  scope: \"row\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"table\", null, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.paginatedData, (notice, idx) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: idx,\n      onClick: $event => $options.NoticeClick(notice.notice_id)\n    }, [_createElementVNode(\"th\", _hoisted_6, _toDisplayString(this.cnt - idx - $data.pageNum * $data.pageSize), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", null, _toDisplayString(notice.notice_title), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", null, _toDisplayString(notice.user_id), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", null, _toDisplayString(notice.notice_date), 1\n    /* TEXT */\n    )], 8\n    /* PROPS */\n    , _hoisted_5);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])])]);\n}","map":{"version":3,"mappings":";;;;;AAEOA,IAAE,EAAC;;;gEAENC,oBAEM,KAFN,EAEM;AAFDD,IAAE,EAAC;AAEF,CAFN,EAAoB,cAChBC,oBAAiC,IAAjC,EAAiC;AAA7BD,IAAE,EAAC;AAA0B,CAAjC,EAAsB,QAAtB,CADgB,CAApB;;AAAA;;;AAIKA,IAAE,EAAC;;;gEAGJC,oBAOQ,OAPR,EAOQ,IAPR,EAOQ,cANNA,oBAKK,IALL,EAKK,IALL,EAKK,cAJHA,oBAAwB,IAAxB,EAAwB;AAApBC,OAAK,EAAC;AAAc,CAAxB,EAAgB,KAAhB,CAIG,eAHHD,oBAA0B,IAA1B,EAA0B;AAAtBC,OAAK,EAAC;AAAgB,CAA1B,EAAgB,OAAhB,CAGG,eAFHD,oBAA2B,IAA3B,EAA2B;AAAvBC,OAAK,EAAC;AAAiB,CAA3B,EAAgB,QAAhB,CAEG,eADHD,oBAAyB,IAAzB,EAAyB;AAArBC,OAAK,EAAC;AAAe,CAAzB,EAAgB,MAAhB,CACG,CALL,CAMM,CAPR;;AAAA;;;;AAWQA,OAAK,EAAC;;;uBApBpBC,oBA6BM,KA7BN,cA6BM,CA3BJC,UA2BI,EAvBJH,oBAqBM,KArBN,cAqBM,CApBJA,oBAmBQ,OAnBR,EAmBQ,IAnBR,EAmBQ,CAjBNI,UAiBM,EARNJ,oBAOQ,OAPR,EAOQ,IAPR,EAOQ,oBANNE,oBAKKG,SALL,EAKK,IALL,EAKKC,YALsBC,sBAKtB,EALmC,CAA5BC,MAA4B,EAArBC,GAAqB,KAAlB;yBAAtBP,oBAKK,IALL,EAKK;AALsCQ,SAAG,EAAED,GAK3C;AALiDE,aAAK,YAAEJ,qBAAYC,MAAM,CAACI,SAAnB;AAKxD,KALL,GACEZ,oBAAwD,IAAxD,cAAwDa,sBAAjCC,GAAiC,GAA7BL,GAA6B,GAAxBM,aAAF,GAAWA,cAAe,CAAxD,EAAiD;AAAA;AAAjD,OACAf,oBAAgC,IAAhC,EAAgC,IAAhC,EAAgCa,iBAA1BL,MAAM,CAACQ,YAAmB,CAAhC,EAAyB;AAAA;AAAzB,OACAhB,oBAA2B,IAA3B,EAA2B,IAA3B,EAA2Ba,iBAArBL,MAAM,CAACS,OAAc,CAA3B,EAAoB;AAAA;AAApB,OACAjB,oBAA+B,IAA/B,EAA+B,IAA/B,EAA+Ba,iBAAzBL,MAAM,CAACU,WAAkB,CAA/B,EAAwB;AAAA;AAAxB,MAJF;;AAAA;GAKK,CALL;;AAAA,GAMM,EAPR,CAQM,CAnBR,CAoBI,CArBN,CAuBI,CA7BN","names":["id","_createElementVNode","scope","_createElementBlock","_hoisted_2","_hoisted_4","_Fragment","_renderList","$options","notice","idx","key","onClick","notice_id","_toDisplayString","cnt","$data","notice_title","user_id","notice_date"],"sourceRoot":"","sources":["C:\\eclipse_portable\\WORKSPACE\\javaram\\vue\\src\\components\\notice\\component\\NoticeList.vue"],"sourcesContent":["<template>\r\n\r\n  <div id=\"notice-list-wrap\">\r\n    \r\n    <div id=\"notice_tab\">\r\n        <h3 id=\"notice_title\">Notice</h3>\r\n    </div>\r\n\r\n    <div id=\"notice-list-table\">\r\n      <table>\r\n\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">No.</th>\r\n            <th scope=\"col\">Title</th>\r\n            <th scope=\"col\">Writer</th>\r\n            <th scope=\"col\">Date</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          <tr v-for=\"(notice,idx) in paginatedData\" :key=\"idx\" @click=\"NoticeClick(notice.notice_id)\">\r\n            <th scope=\"row\">{{this.cnt-idx-(pageNum)*pageSize}}</th>\r\n            <td>{{notice.notice_title}}</td>\r\n            <td>{{notice.user_id}}</td>\r\n            <td>{{notice.notice_date}}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\"\r\n\r\nexport default {\r\n  name: 'paginated-list',\r\n  data() {\r\n    return {\r\n      pageNum: 0,\r\n      cnt: 0,\r\n      pageSize: 8,\r\n      listArray: [],\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    nextPage() {\r\n      this.pageNum += 1;\r\n    },\r\n    prevPage() {\r\n      this.pageNum -= 1;\r\n    },\r\n    NoticeList() {\r\n      axios\r\n        .get(\"/notice\")\r\n        .then(response => {\r\n          console.log(response.data);\r\n          this.listArray = response.data;\r\n          this.cnt = response.data.length;\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        })\r\n    },\r\n    NoticeClick(noticedata) {\r\n      this.$router.push({\r\n        path: `/noticedetailpage/${noticedata}`\r\n      });\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    pageCount() {\r\n      let listLeng = this.listArray.length,\r\n        listSize = this.pageSize,\r\n        page = Math.floor(listLeng / listSize);\r\n      if (listLeng % listSize > 0) page += 1;\r\n\r\n      /*\r\n      아니면 page = Math.floor((listLeng - 1) / listSize) + 1;\r\n      이런식으로 if 문 없이 고칠 수도 있다!\r\n      */\r\n      return page;\r\n    },\r\n    paginatedData() {\r\n      const start = this.pageNum * this.pageSize,\r\n        end = start + this.pageSize;\r\n      return this.listArray.slice(start, end);\r\n    },\r\n\r\n  },\r\n  mounted() {\r\n    this.NoticeList();\r\n  },\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n  h3 {\r\n    text-align: left;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n\r\n  table th {\r\n    font-size: 0.8rem;\r\n  }\r\n\r\n  table tr {\r\n    height: 2rem;\r\n    text-align: center;\r\n    border-bottom: 1px solid #505050;\r\n  }\r\n\r\n  table tr:first-of-type {\r\n    border-top: 2px solid #404040;\r\n  }\r\n\r\n  table tr td {\r\n    padding: 0.7rem 0;\r\n    font-size: 0.8rem;\r\n  }\r\n\r\n  #notice_tab {\r\n      display: flex;\r\n      flex-direction: row;\r\n      flex:1;\r\n      border-left-style: solid;\r\n      border-left-width: 5px;\r\n      border-left-color: #00C9BE;\r\n  }\r\n\r\n  #notice_title {\r\n      margin-left: 15px;\r\n      align-self: center;\r\n      flex: 6;\r\n  }\r\n\r\n  #notice-list-table {\r\n    margin-top: 20px;\r\n  }\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}