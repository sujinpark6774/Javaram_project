{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Calendar Test\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CalendarComp = _resolveComponent(\"CalendarComp\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createVNode(_component_CalendarComp, {\n    attributes: _ctx.attrs,\n    onDayclick: $options.onDayClick\n  }, null, 8\n  /* PROPS */\n  , [\"attributes\", \"onDayclick\"]), _createTextVNode(\" \" + _toDisplayString($data.days), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;gCAGQA,oBAAsB,IAAtB,EAAsB,IAAtB,EAAI,eAAJ,EAAiB;AAAA;AAAjB;;;;;uBADJC,oBAIM,KAJN,EAIM,IAJN,EAIM,CAHFC,UAGE,EAFFC,aAA2DC,uBAA3D,EAA2D;AAA5CC,cAAU,EAAEC,UAAgC;AAAxBC,cAAQ,EAAEC;AAAc,GAA3D;;AAAA,iCAEE,mBAFyD,MAC3DC,iBAAGC,UAAH,GAAO;AAAA;GACL,CAJN","names":["_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_CalendarComp","attributes","_ctx","onDayclick","$options","_toDisplayString","$data"],"sourceRoot":"","sources":["C:\\eclipse_portable\\WORKSPACE\\javaram\\vue\\src\\components\\todo\\component\\TodoCalendar.vue"],"sourcesContent":["<template>\r\n\r\n    <div>\r\n        <h2>Calendar Test</h2>\r\n        <CalendarComp :attributes='attrs' @dayclick=\"onDayClick\" />\r\n        {{ days }}\r\n    </div>\r\n    \r\n</template>\r\n\r\n\r\n\r\n<script>\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      days: [],\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    dates() {\r\n    //   return this.days.map(day => day.date);\r\n      return this.days(day => day.date);\r\n    },\r\n\r\n    attributes() {\r\n    //   return this.dates.map(date => ({\r\n      return this.dates(date => ({\r\n        highlight: true,\r\n        dates: date,\r\n      }));\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    onDayClick(day) {\r\n      const idx = this.days.findIndex(d => d.id === day.id);\r\n      if (idx >= 0) {\r\n        this.days.splice(idx, 1);\r\n      } else {\r\n        this.days.push({\r\n        //   id: day.id,\r\n          date: day.date,\r\n        });\r\n      }\r\n\r\n\r\n\r\n    },\r\n  },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module"}