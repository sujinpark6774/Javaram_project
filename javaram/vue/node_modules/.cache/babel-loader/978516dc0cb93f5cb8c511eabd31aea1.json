{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      days: [],\n      totals: [],\n      user_id: sessionStorage.getItem('user_id'),\n      user_access: sessionStorage.getItem('access'),\n      attributes: [{\n        dot: true,\n        dates: [{\n          start: new Date(2022, 2, 1),\n          end: new Date(2022, 2, 6)\n        } // new Date(2022,2,10),\n        // new Date(2022,2,25),\n        // new Date(2022-03-06),\n        ]\n      }]\n    };\n  },\n\n  methods: {\n    // Todo 데이터(user 기준) 가져오기 -> 이벤트와 무관하게 기본으로 가져와야 함\n    TodoListU() {\n      axios.get(\"/todo/?user=\" + this.user_id).then(response => {\n        console.log(response.data);\n        this.totals = response.data;\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n\n    // Calendar에서 선택한 날짜 받음\n    onDayClick(day) {\n      const idx = this.days.findIndex(d => d.id === day.id);\n\n      if (idx >= 0) {\n        this.days.splice(idx, 1);\n      } else {\n        this.days = [], this.days.push({\n          id: day.id,\n          date: day.date\n        });\n        console.log(this.days);\n        this.day = this.days[0];\n      } // Calendar에서 선택한 날짜를 TodoPage로 보내기 \n\n\n      this.$emit(\"clickdateC\", this.day);\n    }\n\n  },\n\n  mounted() {\n    this.TodoListU();\n  }\n\n};","map":{"version":3,"mappings":"AAWA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACbC,MAAI,GAAG;AACL,WAAO;AACLC,UAAI,EAAE,EADD;AAELC,YAAM,EAAE,EAFH;AAILC,aAAM,EAAIC,cAAc,CAACC,OAAf,CAAuB,SAAvB,CAJL;AAKLC,iBAAU,EAAIF,cAAc,CAACC,OAAf,CAAuB,QAAvB,CALT;AAOLE,gBAAU,EAAE,CACV;AACEC,WAAG,EAAE,IADP;AAEEC,aAAK,EAAE,CACL;AAACC,eAAK,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAc,CAAd,EAAgB,CAAhB,CAAR;AAA4BC,aAAG,EAAE,IAAID,IAAJ,CAAS,IAAT,EAAc,CAAd,EAAgB,CAAhB;AAAjC,SADK,CAEL;AACA;AACA;AAJK;AAFT,OADU;AAPP,KAAP;AAsBD,GAxBY;;AA0BbE,SAAO,EAAE;AAEP;AACAC,aAAS,GAAG;AACVf,WAAI,CACDgB,GADH,CACO,iBAAiB,KAAKZ,OAD7B,EAEGa,IAFH,CAEQC,QAAO,IAAK;AACdC,eAAO,CAACC,GAAR,CAAYF,QAAQ,CAACjB,IAArB;AACA,aAAKE,MAAL,GAAce,QAAQ,CAACjB,IAAvB;AACH,OALH,EAMGoB,KANH,CAMSC,KAAK;AACRH,eAAO,CAACC,GAAR,CAAYE,CAAZ;AACH,OARH;AASD,KAbM;;AAeP;AACAC,cAAU,CAACC,GAAD,EAAM;AACd,YAAMC,GAAE,GAAI,KAAKvB,IAAL,CAAUwB,SAAV,CAAoBC,KAAKA,CAAC,CAACC,EAAF,KAASJ,GAAG,CAACI,EAAtC,CAAZ;;AACA,UAAIH,GAAE,IAAK,CAAX,EAAc;AACZ,aAAKvB,IAAL,CAAU2B,MAAV,CAAiBJ,GAAjB,EAAsB,CAAtB;AACF,OAFA,MAEO;AACL,aAAKvB,IAAL,GAAY,EAAZ,EACA,KAAKA,IAAL,CAAU4B,IAAV,CAAe;AACbF,YAAE,EAAEJ,GAAG,CAACI,EADK;AAEbG,cAAI,EAAEP,GAAG,CAACO;AAFG,SAAf,CADA;AAKAZ,eAAO,CAACC,GAAR,CAAY,KAAKlB,IAAjB;AACA,aAAKsB,GAAL,GAAS,KAAKtB,IAAL,CAAU,CAAV,CAAT;AACF,OAZc,CAcd;;;AACA,WAAK8B,KAAL,CAAW,YAAX,EAAwB,KAAKR,GAA7B;AACD;;AAhCM,GA1BI;;AA8DbS,SAAO,GAAG;AACR,SAAKlB,SAAL;AACD;;AAhEY,CAAf","names":["axios","data","days","totals","user_id","sessionStorage","getItem","user_access","attributes","dot","dates","start","Date","end","methods","TodoListU","get","then","response","console","log","catch","e","onDayClick","day","idx","findIndex","d","id","splice","push","date","$emit","mounted"],"sourceRoot":"","sources":["C:\\eclipse_portable\\WORKSPACE\\javaram\\vue\\src\\components\\todo\\component\\TodoCalendar.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <CalendarComp \r\n          is-expanded \r\n          :attributes=\"attributes\" \r\n          :from-date=\"new Date(2022, 2, 1)\"\r\n          @dayclick=\"onDayClick\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      days: [],\r\n      totals: [],\r\n      \r\n      user_id : sessionStorage.getItem('user_id'),\r\n      user_access : sessionStorage.getItem('access'),\r\n\r\n      attributes: [\r\n        {\r\n          dot: true,\r\n          dates: [\r\n            {start: new Date(2022,2,1), end: new Date(2022,2,6)},\r\n            // new Date(2022,2,10),\r\n            // new Date(2022,2,25),\r\n            // new Date(2022-03-06),\r\n          ]\r\n        }\r\n      ],\r\n\r\n\r\n\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    \r\n    // Todo 데이터(user 기준) 가져오기 -> 이벤트와 무관하게 기본으로 가져와야 함\r\n    TodoListU() {\r\n      axios\r\n        .get(\"/todo/?user=\" + this.user_id)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            this.totals = response.data;\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        })\r\n    },\r\n\r\n    // Calendar에서 선택한 날짜 받음\r\n    onDayClick(day) {\r\n      const idx = this.days.findIndex(d => d.id === day.id);\r\n      if (idx >= 0) {\r\n        this.days.splice(idx, 1);\r\n      } else {\r\n        this.days = [],\r\n        this.days.push({\r\n          id: day.id,\r\n          date: day.date,\r\n        });\r\n        console.log(this.days);\r\n        this.day=this.days[0];\r\n      }\r\n\r\n      // Calendar에서 선택한 날짜를 TodoPage로 보내기 \r\n      this.$emit(\"clickdateC\",this.day);\r\n    },\r\n\r\n  },\r\n\r\n  mounted() {\r\n    this.TodoListU();\r\n  },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module"}