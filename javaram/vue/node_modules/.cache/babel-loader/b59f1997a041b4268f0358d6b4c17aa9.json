{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-4716594c\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"pointer\"\n};\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"a\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.onPageChange($props.currentPage - 1))\n  }, \"<\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.pages, (paging, index) => {\n    return _openBlock(), _createElementBlock(\"a\", {\n      key: index,\n      onClick: $event => $options.onPageChange(paging - 1),\n      class: _normalizeClass(paging - 1 === $props.currentPage ? 'currentPage' : '')\n    }, \"{ { paging } }\", 10, _hoisted_2);\n  }), 128)), _createElementVNode(\"a\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.onPageChange($props.currentPage + 1))\n  }, \">\")]);\n}","map":{"version":3,"mappings":";;;;;AACSA,OAAK,EAAC;;;;uBAAXC,oBAIM,KAJN,cAIM,CAHFC,oBAAkD,GAAlD,EAAkD;AAA9CC,WAAK,sCAAEC,sBAAaC,qBAAW,CAAxB,CAAF;AAAyC,GAAlD,EAA0C,GAA1C,CAGE,qBAFFJ,oBAA8JK,SAA9J,EAA8J,IAA9J,EAA8JC,YAAjIH,cAAiI,EAA5H,CAAvBI,MAAuB,EAAfC,KAAe,KAAV;yBAAxBR,oBAA8J,GAA9J,EAA8J;AAAzHS,SAAG,EAAED,KAAoH;AAA5GN,aAAK,YAAEC,sBAAaI,MAAM,IAAnB,CAAqG;AAA1ER,WAAK,kBAAEQ,MAAM,IAAN,KAAeH,kBAAf,GAA0B,aAA1B,GAA0B,EAA5B;AAAqE,KAA9J,EAA4I,gBAA5I,EAA0J,EAA1J,EAA0JM,UAA1J;GAA8J,CAA9J,MAEE,GADFT,oBAAkD,GAAlD,EAAkD;AAA9CC,WAAK,sCAAEC,sBAAaC,qBAAW,CAAxB,CAAF;AAAyC,GAAlD,EAA0C,GAA1C,CACE,CAJN","names":["class","_createElementBlock","_createElementVNode","onClick","$options","$props","_Fragment","_renderList","paging","index","key","_hoisted_2"],"sourceRoot":"","sources":["C:\\eclipse_portable\\WORKSPACE\\javaram\\vue\\src\\components\\notice\\component\\Pagination.vue"],"sourcesContent":["<template>\r\n    <div class=\"pointer\">\r\n        <a @click=\"onPageChange(currentPage - 1)\">&lt;</a>\r\n        <a v-for=\"(paging, index) in pages\" :key=\"index\" @click=\"onPageChange(paging - 1)\" :class=\"paging - 1 === currentPage ? 'currentPage' : ''\">{ { paging } }</a>\r\n        <a @click=\"onPageChange(currentPage + 1)\">&gt;</a>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'Pagination',\r\n    props: ['currentPage', 'totalPages', 'pageChange'],\r\n    data() {\r\n        return {};\r\n    },\r\n    computed: {\r\n        pages: function() {\r\n            const list = [];\r\n            for (let index = this.startPage; index <= this.endPage; index += 1) { list.push(index); }\r\n            return list;\r\n        },\r\n        startPage() {\r\n            return parseInt(this.currentPage / 5) * 5 + 1;\r\n        },\r\n        endPage() {\r\n            let lastPage = parseInt(this.currentPage / 5) * 5 + 5;\r\n            return lastPage <= this.totalPages ? lastPage : this.totalPages;\r\n        }\r\n    },\r\n    methods: {\r\n        onPageChange(val) {\r\n            if (val < 0) {\r\n                alert('첫 페이지입니다.');\r\n                return;\r\n            }\r\n            if (val >= this.totalPages) {\r\n                alert('마지막 페이지입니다.');\r\n                return;\r\n            }\r\n            const param = {\r\n                requestPage: val,\r\n            };\r\n            this.pageChange(param);\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.pointer a {\r\n    cursor: pointer;\r\n    margin: 5px;\r\n}\r\n.currentPage {\r\n    background: #A3C010;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}