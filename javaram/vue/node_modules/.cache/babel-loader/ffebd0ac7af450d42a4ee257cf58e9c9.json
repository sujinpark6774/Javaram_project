{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-52bcc9ff\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"todos\"\n};\nconst _hoisted_2 = {\n  class: \"todo-left\"\n};\nconst _hoisted_3 = {\n  class: \"list-group\"\n};\nconst _hoisted_4 = [\"onUpdate:modelValue\"];\nconst _hoisted_5 = {\n  class: \"todo-right\"\n};\nconst _hoisted_6 = {\n  class: \"accordion accordion-flush\",\n  id: \"accordionFlushExample\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"accordion-header\",\n  id: \"flush-headingOne\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"accordion-button collapsed\",\n  type: \"button\",\n  \"data-bs-toggle\": \"collapse\",\n  \"data-bs-target\": \"#flush-collapseOne\",\n  \"aria-expanded\": \"false\",\n  \"aria-controls\": \"flush-collapseOne\"\n}, \" Accordion Item #1 \")], -1\n/* HOISTED */\n));\n\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"flush-collapseOne\",\n  class: \"accordion-collapse collapse\",\n  \"aria-labelledby\": \"flush-headingOne\",\n  \"data-bs-parent\": \"#accordionFlushExample\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"accordion-body\"\n}, [/*#__PURE__*/_createTextVNode(\"Placeholder content for this accordion, which is intended to demonstrate the \"), /*#__PURE__*/_createElementVNode(\"code\", null, \".accordion-flush\"), /*#__PURE__*/_createTextVNode(\" class. This is the first item's accordion body.\")])], -1\n/* HOISTED */\n));\n\nconst _hoisted_9 = [_hoisted_7, _hoisted_8];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Todo list \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"ul\", _hoisted_3, [_createElementVNode(\"h6\", null, \"clickdateD: \" + _toDisplayString($props.clickdateD), 1\n  /* TEXT */\n  ), _createElementVNode(\"h6\", null, \"date: \" + _toDisplayString(this.date), 1\n  /* TEXT */\n  ), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.todos, (todo, idx) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: idx\n    }, [_createCommentVNode(\" <input type=\\\"checkbox\\\" v-model=\\\"todo.check\\\" @click=\\\"TodoDetail()\\\"> \"), _withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => todo.check = $event\n    }, null, 8\n    /* PROPS */\n    , _hoisted_4), [[_vModelCheckbox, todo.check]]), _createTextVNode(\" \" + _toDisplayString(todo.title), 1\n    /* TEXT */\n    )]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.todos, (todo, idx) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"accordion-item\",\n      key: idx\n    }, _hoisted_9);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])]);\n}","map":{"version":3,"mappings":";;;;;AAEaA,OAAK,EAAC;;;AAGFA,OAAK,EAAC;;;AAEHA,OAAK,EAAC;;;;AAcTA,OAAK,EAAC;;;AAEFA,OAAK,EAAC;AAA4BC,IAAE,EAAC;;;gEAGlCC,oBAKK,IALL,EAKK;AALDF,OAAK,EAAC,kBAKL;AALwBC,IAAE,EAAC;AAK3B,CALL,gBACIC,oBAGS,QAHT,EAGS;AAHDF,OAAK,EAAC,4BAGL;AAHkCG,MAAI,EAAC,QAGvC;AAHgD,oBAAe,UAG/D;AAFL,oBAAe,oBAEV;AAF+B,mBAAc,OAE7C;AAFqD,mBAAc;AAEnE,CAHT,EACgG,qBADhG,EADJ;;AAAA;;gEAMAD,oBAIM,KAJN,EAIM;AAJDD,IAAE,EAAC,mBAIF;AAJsBD,OAAK,EAAC,6BAI5B;AAJ0D,qBAAgB,kBAI1E;AAHF,oBAAe;AAGb,CAJN,gBAEIE,oBACuF,KADvF,EACuF;AADlFF,OAAK,EAAC;AAC4E,CADvF,EAA2B,+BAAC,gFAAD,eACvBE,oBAA6B,MAA7B,EAA6B,IAA7B,EAAM,kBAAN,CADuB,gCACM,mDADN,CAA3B,EAFJ;;AAAA;;oBANAE,YAMAC;;uBA9BhBC,oBAuCM,KAvCN,cAuCM,CArCFC,kCAqCE,EApCFL,oBAcM,KAdN,cAcM,CAZFA,oBAWK,IAXL,cAWK,CATDA,oBAAqC,IAArC,EAAqC,IAArC,EAAI,iBAAYM,iBAAGC,iBAAH,CAAhB,EAA6B;AAAA;AAA7B,GASC,EARDP,oBAA8B,IAA9B,EAA8B,IAA9B,EAAI,WAAMM,sBAAQE,IAAR,CAAV,EAAsB;AAAA;AAAtB,GAQC,qBANDJ,oBAIMK,SAJN,EAIM,IAJN,EAIMC,YAJoBC,WAIpB,EAJyB,CAAlBC,IAAkB,EAAbC,GAAa,KAAV;yBAArBT,oBAIM,KAJN,EAIM;AAJ4BU,SAAG,EAAED;AAIjC,KAJN,EAA0C,CAC9CR,iGAD8C,kBAE9CL,oBAA4C,OAA5C,EAA4C;AAArCC,UAAI,EAAC,UAAgC;uCAAZW,IAAI,CAACG,QAAKC;AAAE,KAA5C;;AAAA,sCAAgCJ,IAAI,CAACG,QAFS,mBAEF,MAChCT,iBAAGM,IAAI,CAACK,KAAR,GAAa;AAAA;KAHqB,CAA1C;GAIM,CAJN;;AAAA,GAMC,EAXL,CAYE,CAdN,CAoCE,EApBFjB,oBAmBM,KAnBN,cAmBM,CAjBFA,oBAgBM,KAhBN,cAgBM,oBAdFI,oBAYMK,SAZN,EAYM,IAZN,EAYMC,YAZ2CC,WAY3C,EAZgD,CAAlBC,IAAkB,EAAbC,GAAa,KAAV;yBAA5CT,oBAYM,KAZN,EAYM;AAZDN,WAAK,EAAC,gBAYL;AAZmDgB,SAAG,EAAED;AAYxD,KAZN;GAYM,CAZN;;AAAA,GAcE,EAhBN,CAiBE,CAnBN,CAoBE,CAvCN","names":["class","id","_createElementVNode","type","_hoisted_7","_hoisted_8","_createElementBlock","_createCommentVNode","_toDisplayString","$props","date","_Fragment","_renderList","$data","todo","idx","key","check","$event","title"],"sourceRoot":"","sources":["C:\\eclipse_portable\\WORKSPACE\\javaram\\vue\\src\\components\\todo\\component\\TodoList.vue"],"sourcesContent":["<template>\r\n\r\n        <div class=\"todos\">\r\n\r\n            <!-- Todo list -->\r\n            <div class=\"todo-left\">\r\n\r\n                <ul class=\"list-group\">\r\n\r\n                    <h6>clickdateD: {{ clickdateD }}</h6>\r\n                    <h6>date: {{ this.date }}</h6>\r\n\r\n                    <div v-for=\"(todo,idx) in todos\" :key=\"idx\">\r\n                <!-- <input type=\"checkbox\" v-model=\"todo.check\" @click=\"TodoDetail()\"> -->\r\n                <input type=\"checkbox\" v-model=\"todo.check\">\r\n                            {{ todo.title }}\r\n                    </div>\r\n\r\n                </ul>\r\n            </div>\r\n\r\n            <div class=\"todo-right\">\r\n\r\n                <div class=\"accordion accordion-flush\" id=\"accordionFlushExample\">\r\n\r\n                    <div class=\"accordion-item\" v-for=\"(todo,idx) in todos\" :key=\"idx\">\r\n                        <h2 class=\"accordion-header\" id=\"flush-headingOne\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#flush-collapseOne\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"flush-collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingOne\"\r\n                            data-bs-parent=\"#accordionFlushExample\">\r\n                            <div class=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the\r\n                                <code>.accordion-flush</code> class. This is the first item's accordion body.</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { computed } from '@vue/runtime-core';\r\n\r\n\r\nexport default {\r\n    name: \"todoList\",\r\n\r\n    props: {\r\n        // Calendar에서 선택한 날짜 받음\r\n        clickdateD: String\r\n    },\r\n\r\n    setup(props) {\r\n      const date = computed(() => {\r\n        return props.clickdateD;\r\n      });\r\n      return { date }  \r\n    },\r\n  \r\n    data() {\r\n        return {\r\n            todos: [],\r\n            user: \"sujin\",               // 로그인 정보 가져와야함\r\n            date2: this.date //\"2022-03-25\"\r\n        }\r\n    },\r\n\r\n    methods:{\r\n        \r\n        // Notice 데이터 가져오기\r\n        TodoList(){\r\n            axios\r\n                .get(\"/todo/detail?user=\" + this.user + \"&tododate=2022-03-25\")  // + this.date2\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                    this.todos = response.data;\r\n                })\r\n                .catch(e => {\r\n                    console.log(e);\r\n                })\r\n        },\r\n\r\n        // Todo 선택시 내용 표시\r\n        // TodoDetail(){\r\n\r\n        // },\r\n\r\n\r\n    },\r\n\r\n    mounted() {\r\n        this.TodoList();\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n\r\n  .todos {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n</style>"]},"metadata":{},"sourceType":"module"}